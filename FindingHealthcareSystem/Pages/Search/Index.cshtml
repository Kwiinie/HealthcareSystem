@page
@model FindingHealthcareSystem.Pages.Search.IndexModel
@{
}

<link rel="stylesheet" href="/css/search.css" asp-append-version="true" />
@using Newtonsoft.Json
@using BusinessObjects.Dtos.User
@{
    var currentUserJson = HttpContext.Session.GetString("User");
    GeneralUserDto currentUser = null;

    if (!string.IsNullOrEmpty(currentUserJson))
    {
        currentUser = JsonConvert.DeserializeObject<GeneralUserDto>(currentUserJson);
    }
}

<div class="container mt-10">
    <!-- Enhanced Search Banner -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="search-banner">
                <div class="text-center mb-4">
                    <h2 class="text-primary mb-2">Tìm Kiếm Bác Sĩ</h2>
                    <p class="text-muted">Tìm kiếm bác sĩ phù hợp với nhu cầu của bạn một cách dễ dàng</p>
                </div>

                <!-- Enhanced Search Form -->
                <form method="get" id="searchForm">
                    @Html.AntiForgeryToken()
                    
                    <!-- Location Search Row -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label for="province" class="form-label fw-semibold">
                                Tỉnh/Thành
                            </label>
                            <select id="province" name="province" class="form-select form-select-lg" onchange="loadDistricts()">
                                <option value="">-- Chọn tỉnh/thành --</option>
                                @foreach (var province in Model.Provinces)
                                {
                                    <!option value="@province.Code" @(Model.Province == province.Code ? "selected" : "")>@province.Name</!option>
                                }
                            </select>
                        </div>

                        <div class="col-md-4">
                            <label for="district" class="form-label fw-semibold">
                                Quận/Huyện
                            </label>
                            <select id="district" name="district" class="form-select form-select-lg" onchange="loadWards()" disabled>
                                <option value="">-- Chọn quận/huyện --</option>
                            </select>
                        </div>

                        <div class="col-md-4">
                            <label for="ward" class="form-label fw-semibold">
                                Phường/Xã
                            </label>
                            <select id="ward" name="ward" class="form-select form-select-lg" disabled>
                                <option value="">-- Chọn phường/xã --</option>
                            </select>
                        </div>
                    </div>

                    <!-- Specialty and Search Row -->
                    <div class="row g-3 mb-4">
                        <div class="col-md-6">
                            <label for="specialty" class="form-label fw-semibold">
                                Chuyên khoa
                            </label>
                            <select id="specialty" name="specialty" class="form-select form-select-lg">
                                <option value="">-- Tất cả chuyên khoa --</option>
                                @foreach (var specialty in Model.Specialties)
                                {
                                    <!option value="@specialty.Name" @(specialty.Name == Model.Specialty ? "selected" : "")>@specialty.Name</!option>
                                }
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="searchKeyword" class="form-label fw-semibold">
                                Tên bác sĩ
                            </label>
                            <div class="input-group input-group-lg">
                                <input type="text" id="searchKeyword" name="searchKeyword" 
                                       class="form-control" placeholder="Nhập tên bác sĩ..." 
                                       value="@Model.SearchKeyword">
                                <button type="submit" class="btn btn-primary px-4">
                                    <i class="bi bi-search me-1"></i>Tìm kiếm
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Clear Filters Button -->
                    @if (!string.IsNullOrEmpty(Model.Province) || !string.IsNullOrEmpty(Model.Specialty) || !string.IsNullOrEmpty(Model.SearchKeyword))
                    {
                        <div class="text-center">
                            <a href="/Search" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-clockwise me-1"></i>Xóa bộ lọc
                            </a>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>

    <!-- Search Results Section -->
    <div class="row">
        <!-- Results Header -->
        <div class="col-12 mb-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="result-count">
                    <h4 class="text-primary mb-1">
                        Kết quả tìm kiếm
                    </h4>
                    <p class="text-muted mb-0">
                        Tìm thấy <strong>@Model.Professionals.Count()</strong> bác sĩ phù hợp
                    </p>
                </div>
                               
            </div>
        </div>

        <!-- Results -->
        <div class="col-12">
            @if (!Model.Professionals.Any())
            {
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="bi bi-search display-1 text-muted mb-3"></i>
                        <h4 class="text-muted mb-3">Không tìm thấy bác sĩ phù hợp</h4>
                        <p class="text-muted mb-4">Hãy thử điều chỉnh các tiêu chí tìm kiếm của bạn</p>
                        <div class="d-flex justify-content-center gap-2">
                            <a href="/Search" class="btn btn-primary">Tìm kiếm mới</a>
                            <a href="/Browse" class="btn btn-outline-primary">Duyệt tất cả bác sĩ</a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="search-results">
                    @foreach (var professional in Model.Professionals)
                    {
                        <div class="search-card">
                            <!-- Doctor Image Section -->
                            <div class="position-relative overflow-hidden">
                                <img src="@(string.IsNullOrEmpty(professional.ImgUrl) ? "/img/DefaultProfessional.jpg" : professional.ImgUrl)"
                                     class="card-img" alt="@professional.FullName">
                            </div>

                            <!-- Doctor Info Section -->
                            <div class="p-3 flex-grow-1 d-flex flex-column">
                                <!-- Header -->
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="mb-1 text-primary">@professional.FullName</h5>
                                    @if (!string.IsNullOrEmpty(professional.ExpertiseName))
                                    {
                                        <span class="badge bg-light text-dark">@professional.ExpertiseName</span>
                                    }
                                </div>

                                <!-- Expertise -->
                                @if (!string.IsNullOrEmpty(professional.ExpertiseName))
                                {
                                    <p class="mb-1"><strong>Chuyên ngành:</strong> @professional.ExpertiseName</p>
                                }

                                <!-- Location -->
                                <p class="text-muted mb-2">
                                    <i class="bi bi-geo-alt-fill"></i>
                                    @professional.Address, @professional.Ward, @professional.District, @professional.Province
                                </p>

                                <!-- Specialties -->
                                @if (professional.Specialties.Any())
                                {
                                    <div class="mb-2">
                                        <strong>Chuyên khoa:</strong>
                                        <div class="d-flex flex-wrap gap-1 mt-1">
                                            @foreach (var spec in professional.Specialties.Take(5))
                                            {
                                                <span class="badge-specialty">@spec</span>
                                            }
                                            @if (professional.Specialties.Count > 5)
                                            {
                                                <span class="badge bg-secondary">+@(professional.Specialties.Count - 5)</span>
                                            }
                                        </div>
                                    </div>
                                }

                                <!-- Experience -->
                                @if (!string.IsNullOrEmpty(professional.Experience))
                                {
                                    <p class="mb-3">@(professional.Experience.Length > 150 ? professional.Experience.Substring(0, 150) + "..." : professional.Experience)</p>
                                }

                                <!-- Action Buttons -->
                                <div class="d-flex justify-content-end mt-auto">
                                    @if (currentUser != null && currentUser.Role == "Patient")
                                    {
                                        <a href="/patient/appointment/create?providerId=@professional.Id&providerType=Professional"
                                           class="btn btn-primary" style="width: 35%;">
                                            Đặt lịch
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="/Professional/@professional.Id" class="btn btn-outline-primary me-2" style="width: 35%;">Xem chi tiết</a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>

                
            }
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="d-none">
    <div class="text-center">
        <div class="spinner-border text-primary mb-3" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="text-primary">Đang tìm kiếm...</p>
    </div>
</div>


<script>
// Enhanced JavaScript for better UX
document.addEventListener('DOMContentLoaded', function() {
    // Show loading overlay during form submission
    const form = document.getElementById('searchForm');
    const loadingOverlay = document.getElementById('loadingOverlay');
    
    form.addEventListener('submit', function() {
        loadingOverlay.classList.remove('d-none');
    });
    
    // Auto-submit form when filters change (with debouncing)
    let debounceTimer;
    const formElements = form.querySelectorAll('select');
    
    formElements.forEach(element => {
        element.addEventListener('change', function() {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                if (this.value) {
                    form.submit();
                }
            }, 500);
        });
    });
});

// Quick search function
function quickSearch(specialty) {
    document.getElementById('specialty').value = specialty;
    document.getElementById('searchForm').submit();
}

// Sort results function (placeholder)
function sortResults(sortBy) {
    console.log('Sorting by:', sortBy);
    // Implement sorting logic here
}

// Load districts function (placeholder)
function loadDistricts() {
    const provinceSelect = document.getElementById('province');
    const districtSelect = document.getElementById('district');
    const wardSelect = document.getElementById('ward');
    
    // Reset dependent dropdowns
    districtSelect.innerHTML = '<option value="">-- Chọn quận/huyện --</option>';
    wardSelect.innerHTML = '<option value="">-- Chọn phường/xã --</option>';
    
    if (provinceSelect.value) {
        districtSelect.disabled = false;
        // Implement district loading logic here
    } else {
        districtSelect.disabled = true;
        wardSelect.disabled = true;
    }
}

// Load wards function (placeholder)
function loadWards() {
    const districtSelect = document.getElementById('district');
    const wardSelect = document.getElementById('ward');
    
    wardSelect.innerHTML = '<option value="">-- Chọn phường/xã --</option>';
    
    if (districtSelect.value) {
        wardSelect.disabled = false;
        // Implement ward loading logic here
    } else {
        wardSelect.disabled = true;
    }
}
</script>