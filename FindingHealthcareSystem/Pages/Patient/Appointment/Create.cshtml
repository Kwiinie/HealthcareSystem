@page "/patient/appointment/create"
@model FindingHealthcareSystem.Pages.Patient.Appointment.CreateModel
@using Newtonsoft.Json
@using System.Globalization
@{
}
<link rel="stylesheet" href="~/css/createAppointment.css" />
@{
    var providerId = Model.ProviderId;
    var providerType = Model.ProviderType;
}
<div class="container mt-10">
    <div class="booking-header">
        <h1 class="booking-title">Đặt lịch khám</h1>
        <p class="booking-subtitle">Chọn ngày và giờ phù hợp với lịch trình của bạn</p>
    </div>

    <form id="dateSelectionForm" method="get" asp-page="Create">
        <input type="hidden" id="SelectedDateInput" name="SelectedDate" value="@Model.SelectedDate?.ToString("yyyy-MM-dd")" />
        <input type="hidden" name="ProviderId" value="@Model.ProviderId" />
        <input type="hidden" name="ProviderType" value="@Model.ProviderType" />

        <input type="hidden" id="ScheduleStartDate" value="@(Model.ScheduleStartDate?.ToString("yyyy-MM-dd") ?? "")" />
        <input type="hidden" id="ScheduleEndDate" value="@(Model.ScheduleEndDate?.ToString("yyyy-MM-dd") ?? "")" />
        <input type="hidden" id="WorkingWeekdays" value='@Model.WorkingWeekdaysJson' />
        <input type="hidden" id="ClosedExceptionDates" value='@Model.ClosedExceptionDatesJson' />
    </form>

    <div class="card mb-4">
        <div class="card-body p-0">
            <div class="wrapper">
                <header>
                    <p class="current-date">Tháng @Model.SelectedDate?.Month @Model.SelectedDate?.Year</p>
                    <div class="icons">
                        <span id="prev" class="material-symbols-rounded">chevron_left</span>
                        <span id="next" class="material-symbols-rounded">chevron_right</span>
                    </div>
                </header>
                <div class="calendar">
                    <ul class="weeks">
                        <li>CN</li>
                        <li>T2</li>
                        <li>T3</li>
                        <li>T4</li>
                        <li>T5</li>
                        <li>T6</li>
                        <li>T7</li>
                    </ul>
                    <ul class="days"></ul>
                </div>
            </div>
        </div>
    </div>

    @* CHỖ NÀY ĐỔI: post sang trang Ticket *@
    <form method="post" asp-page="/Patient/Appointment/Ticket" id="appointmentForm">
        <input type="hidden" id="SelectedDateInputPost" name="SelectedDate" value="@Model.SelectedDate?.ToString("yyyy-MM-dd")" />
        <input type="hidden" name="ProviderId" value="@providerId" />
        <input type="hidden" name="ProviderType" value="@providerType" />
        <input type="hidden" id="SelectedTimeSlot" name="SelectedTimeSlot" value="" />

        @* THÊM: các hidden giúp in đẹp trên Ticket *@
        <input type="hidden" name="ProviderName" value="@(providerType == "Facility" ? Model.facility?.Name : Model.professional?.FullName)" />
        <input type="hidden" id="SelectedServiceId" name="SelectedServiceId" value="@Model.SelectedServiceId" />
        <input type="hidden" id="SelectedServiceName" name="ServiceName" value="" />

        <div class="row">
            <div class="col-7 mb-4">
                <!-- Time Slots -->
                <div class="time-slots-container mb-3">
                    <h2 class="section-title">Chọn giờ khám</h2>
                    <div class="row">
                        @if (Model.TimeSlots.Count == 0)
                        {
                            <div class="col-12">
                                <div class="alert alert-info">Không có khung giờ khám vào ngày này.</div>
                            </div>
                        }
                        else
                        {
                            @foreach (var slot in Model.TimeSlots)
                            {
                                var isBooked = ViewData["BookedSlots"] is List<string> bookedSlots && bookedSlots.Contains(slot);
                                var isSelected = slot == Model.SelectedTimeSlot;
                                <div class="col-lg-4 col-6 mb-3">
                                    <div class="time-slot @(isBooked ? "disabled" : "") @(isSelected ? "selected" : "")"
                                         data-slot="@slot"
                                         @if (!isBooked)
                                         {
                                                         <text>onclick="selectTimeSlot('@slot')"</text>
                                                 }
        >
                                                <div class="time-slot-text">@slot</div>
                                                <span class="badge-available">@((isBooked) ? "Đã đặt" : "Còn trống")</span>
                                            </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="service-card">
                    <h2 class="section-title">Dịch vụ (báo giá tham khảo)</h2>
                    <div class="alert alert-secondary py-2 px-3 mb-3">
                        Chọn dịch vụ để xem <strong>giá tham khảo</strong>. Việc đặt lịch <strong>không yêu cầu</strong> chọn dịch vụ và <strong>không phát sinh thanh toán</strong>.
                    </div>

                    <div class="service-options">
                        @foreach (var service in Model.services)
                        {
                            var priceVnd = String.Format(new CultureInfo("vi-VN"), "{0:C0}", service.Price ?? 0);
                            <div class="service-item">
                                <div class="custom-control custom-radio">
                                    <input type="radio"
                                           id="service@service.Id"
                                           name="serviceOption"
                                           class="custom-control-input"
                                           value="@service.Id"
                                           onclick="selectService(@service.Id)" />
                                    <label class="custom-control-label" for="service@(service.Id)">
                                        <div class="service-info">
                                            <div class="service-name">@service.Name</div>
                                            <div class="service-description">@service.Description</div>
                                        </div>
                                        <div class="service-price">@priceVnd</div>
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Appointment Summary -->
            <div class="col-5">
                <div class="appointment-summary">
                    <h2 class="section-title">Thông tin lịch khám</h2>

                    <div class="doctor-info">
                        @if (providerType == "Facility")
                        {
                            <img src="~/img/DefaultFacility.jpg" alt="Facility" class="doctor-avatar">
                        }
                        else if (providerType == "Professional")
                        {
                            <img src="~/img/DefaultProfessional.jpg" alt="Doctor" class="doctor-avatar">
                        }

                        <div class="doctor-details">
                            <div class="doctor-name">
                                @(providerType == "Facility" ? Model.facility.Name : Model.professional.FullName)
                            </div>
                        </div>
                    </div>

                    <div class="summary-item">
                        <div class="summary-label">Dịch vụ</div>
                        <div class="summary-value" id="selectedServiceDisplay">Chưa chọn</div>
                    </div>

                    <div class="summary-item">
                        <div class="summary-label">Ngày khám</div>
                        <div class="summary-value" id="appointmentDate">
                            @{
                                var dayOfWeek = "";
                                if (Model.SelectedDate.HasValue)
                                {
                                    switch ((int)Model.SelectedDate.Value.DayOfWeek)
                                    {
                                        case 1: dayOfWeek = "Thứ hai"; break;
                                        case 2: dayOfWeek = "Thứ ba"; break;
                                        case 3: dayOfWeek = "Thứ tư"; break;
                                        case 4: dayOfWeek = "Thứ năm"; break;
                                        case 5: dayOfWeek = "Thứ sáu"; break;
                                        case 6: dayOfWeek = "Thứ bảy"; break;
                                        case 0: dayOfWeek = "Chủ nhật"; break;
                                    }
                                }
                            }
                            @dayOfWeek, @Model.SelectedDate?.ToString("dd/MM/yyyy")
                        </div>
                    </div>

                    <div class="summary-item">
                        <div class="summary-label">Giờ khám</div>
                        <div class="summary-value" id="appointmentTime">
                            @(string.IsNullOrEmpty(Model.SelectedTimeSlot) ? "Chưa chọn" : Model.SelectedTimeSlot)
                        </div>
                    </div>

                    <div class="summary-item">
                        <div class="summary-label">Địa chỉ</div>
                        @if (providerType == "Facility")
                        {
                            <div class="summary-value">@Model.facility.Address, @Model.facility.Ward, @Model.facility.District, @Model.facility.Province</div>
                        }
                        else if (providerType == "Professional")
                        {
                            <div class="summary-value">@Model.professional.Address, @Model.professional.Ward, @Model.professional.District, @Model.professional.Province</div>
                        }
                    </div>

                    <div class="appointment-footer">
                        <div class="d-grid">
                            @* ĐỔI NÚT: lấy số thứ tự (post sang Ticket) *@
                            <button type="submit" class="btn btn-primary" id="submitButton"
                                    @(string.IsNullOrEmpty(Model.SelectedTimeSlot) ? "disabled" : "")>
                                Lấy số thứ tự
                            </button>
                        </div>
                        <div class="mt-2 text-muted" style="font-size: 0.9rem;">
                            * Giá hiển thị (nếu có) chỉ mang tính tham khảo, thanh toán trực tiếp tại cơ sở y tế.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script src="~/js/createAppointment.js" asp-append-version="true"></script>

<script>
    function selectTimeSlot(slot) {
        document.getElementById('SelectedTimeSlot').value = slot;
        document.getElementById('appointmentTime').innerText = slot;
        document.querySelectorAll('.time-slot').forEach(el => el.classList.remove('selected'));
        const el = document.querySelector(`.time-slot[data-slot="${slot}"]`);
        if (el) el.classList.add('selected');
        validateForm();
    }

    function selectService(serviceId) {
        var services = @Html.Raw(JsonConvert.SerializeObject(Model.services));
        const selected = services.find(s => s.Id === Number(serviceId));
        if (selected) {
            const priceVnd = (selected.Price ?? 0).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            document.getElementById('selectedServiceDisplay').innerText = `${selected.Name} – ${priceVnd}`;
            // Cập nhật hidden để gửi sang Ticket
            document.getElementById('SelectedServiceId').value = selected.Id;
            document.getElementById('SelectedServiceName').value = selected.Name;
        }
        validateForm();
    }

    function validateForm() {
        const timeSlot = document.getElementById('SelectedTimeSlot').value;
        document.getElementById('submitButton').disabled = !timeSlot;
    }

    document.addEventListener('DOMContentLoaded', function () {
        currMonth = @Model.SelectedDate?.Month - 1;
        currYear = @Model.SelectedDate?.Year;
        selectedDate = new Date(@Model.SelectedDate?.Year, @Model.SelectedDate?.Month - 1, @Model.SelectedDate?.Day);
        renderCalendar();

        validateForm();

        // Nếu đã có SelectedServiceId từ server, cập nhật tên để Ticket nhận được luôn
        const svcs = @Html.Raw(JsonConvert.SerializeObject(Model.services));
        const curId = Number(document.getElementById('SelectedServiceId').value || 0);
        if (curId) {
            const cur = svcs.find(s => s.Id === curId);
            if (cur) {
                document.getElementById('SelectedServiceName').value = cur.Name;
                const priceVnd = (cur.Price ?? 0).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                document.getElementById('selectedServiceDisplay').innerText = `${cur.Name} – ${priceVnd}`;
            }
        }
    });
</script>
