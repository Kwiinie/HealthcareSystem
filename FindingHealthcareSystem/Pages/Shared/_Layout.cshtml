<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>FindingHealthcare</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FindingHealthcareSystem.styles.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Lexend+Deca&display=swap&lang=vi" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/ionicons@5.5.2/dist/css/ionicons.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">

    <script>
        ////////////////////////////////////////////////////////
        ///              ADD ANTIFORGERY TOKEN              ///
        //////////////////////////////////////////////////////
        document.addEventListener('DOMContentLoaded', function () {
            // Get the CSRF token
            var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

            // Add fetch request interceptor
            const originalFetch = window.fetch;
            window.fetch = function (url, options) {
                options = options || {};

                // If it's a GET request to a handler, add the antiforgery token
                if (url.includes('handler=')) {
                    const urlObj = new URL(url, window.location.href);

                    if (!urlObj.searchParams.has('__RequestVerificationToken')) {
                        urlObj.searchParams.append('__RequestVerificationToken', csrfToken);
                    }

                    // Update the URL
                    url = urlObj.toString();
                }

                return originalFetch(url, options);
            };
        });
    </script>
</head>
@using Newtonsoft.Json
@using BusinessObjects.Dtos.User;

@{
    var currentUserJson = Context.Session.GetString("User");
    GeneralUserDto currentUser = null;

    if (!string.IsNullOrEmpty(currentUserJson))
    {
        currentUser = JsonConvert.DeserializeObject<GeneralUserDto>(currentUserJson);
    }
}
<body>
    <nav class="navbar navbar-expand-xl fixed-top nav-bg">
        <div class="container">
            <a class="navbar-brand" href="/">FindingHealthcare</a>

            <!-- Add this navbar toggler button for mobile -->
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-card-item">
                        <a class="nav-link" href="/" id="home-link">Trang chủ</a>
                    </li>
                    <li class="nav-card-item">
                        <a class="nav-link" href="/search" id="search-link">Tìm kiếm</a>
                    </li>
                    <li class="nav-card-item">
                        <a class="nav-link" href="/Article/Index" id="article-link">Bài viết</a>
                    </li>
                    @if (currentUser != null && currentUser.Role.Equals("Professional"))
                    {
                        <li class="nav-card-item">
                            <a class="nav-link" href="/professional/appointment" id="article-link">Quản lý</a>
                        </li>
                    }
                    @if (currentUser != null && currentUser.Role.Equals("Patient"))
                    {
                        <li class="nav-card-item">
                            <a class="nav-link" href="/patient/appointment" id="article-link">Xem lịch</a>
                        </li>
                    }
                </ul>
                <ul class="navbar-nav ms-auto">
                    @if (currentUser != null)
                    {
                        <li class="nav-item dropdown user-dropdown">
                            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <div class="user-avatar me-2">
                                    @if (!string.IsNullOrEmpty(currentUser.ImgUrl))
                                    {
                                        <img src="@currentUser.ImgUrl" alt="@currentUser.Fullname" class="user-img">
                                    }
                                    else
                                    {
                                        <img src="/img/defaultAvatar.jpg" alt="@currentUser.Fullname" class="user-img">
                                    }
                                </div>
                                <span class="username-text">@currentUser.Fullname</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <div class="d-flex align-items-center p-2">
                                        <div class="user-avatar me-3">
                                            @if (!string.IsNullOrEmpty(currentUser.ImgUrl))
                                            {
                                                <img src="@currentUser.ImgUrl" alt="@currentUser.Fullname" class="user-img">
                                            }
                                            else
                                            {
                                                <img src="/img/defaultAvatar.jpg" alt="@currentUser.Fullname" class="user-img">
                                            }
                                        </div>
                                        <div>
                                            <h6 class="mb-0">@currentUser.Fullname</h6>
                                            <span class="badge bg-primary">
                                                @if (currentUser.Role == "Patient")
                                                {
                                                    @:Bệnh nhân
                                                }
                                                else if (currentUser.Role == "Professional")
                                                {
                                                    @:Chuyên gia y tế
                                                }
                                                else if (currentUser.Role == "Admin")
                                                {
                                                    @:Quản trị viên
                                                }
                                                else
                                                {
                                                    @:Vai trò không xác định
                                                }
                                            </span>
                                        </div>

                                    </div>

                                <li><hr class="dropdown-divider"></li>
                                <li class="px-3 py-1">
                                    <div class="user-detail">
                                        <div class="d-flex justify-content-between mb-2">
                                            <span class="text-muted">Email:</span>
                                            <span>@currentUser.Email</span>
                                        </div>
                                        <div class="d-flex justify-content-between mb-2">
                                            <span class="text-muted">Số điện thoại:</span>
                                            <span>@currentUser.PhoneNumber</span>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-muted">Trạng thái:</span>
                                            <span class="badge @(currentUser.Status == "Active" ? "bg-success" : "bg-secondary")">
                                                @if (currentUser.Status == "Active")
                                                {
                                                    @:Hoạt động
                                                }
                                                else
                                                {
                                                    @:Không hoạt động
                                                }
                                            </span>
                                        </div>
                                    </div>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    @if (currentUser.Role == "Patient")
                                    {
                                        <a class="dropdown-item" href="/patient/profile/@currentUser.Id"><i class="bi bi-person me-2"></i>Hồ sơ cá nhân</a>
                                    }
                                    else if (currentUser.Role == "Professional")
                                    {
                                        <a class="dropdown-item" href="/professional/profile/@currentUser.Id"><i class="bi bi-person me-2"></i>Hồ sơ cá nhân</a>
                                    }
                                </li>
                                <li>
                                    <form method="post" asp-page="/Auth/Logout" asp-page-handler="Logout" id="logoutForm">
                                        <button type="submit" class="dropdown-item">
                                            <i class="bi bi-box-arrow-right me-2"></i>Đăng xuất
                                        </button>
                                    </form>

                                </li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-card-item auth-item">
                            <a class="nav-link" href="/login">Đăng nhập</a>
                        </li>
                        <li class="nav-card-item auth-item create-account">
                            <a class="nav-link" href="/Auth/register">Tạo tài khoản</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
            <div id="toastContainer" style="position: fixed; bottom: 20px; right: 20px; z-index: 9999;"></div>

    <main role="main" class="pb-3 mt-5">

        @RenderBody()
    </main>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("ReceiveNotification", function (data) {
            showToast(data.message, data.type);
        });

        connection.start().catch(err => console.error(err.toString()));

        function showToast(message, type = "info") {
            const toast = document.createElement("div");
            toast.className = `toast-${type}`;

            // Determine background and text colors based on toast type
            let bgColor, textColor, borderColor;

            switch (type) {
                case "success":
                    bgColor = "var(--secondary-color)";
                    textColor = "var(--text-on-primary)";
                    borderColor = "var(--primary-active)";
                    break;
                case "error":
                    bgColor = "var(--danger-color)";
                    textColor = "var(--text-on-danger)";
                    borderColor = "var(--danger-active)";
                    break;
                case "warning":
                    bgColor = "#FFCC00";
                    textColor = "#333333";
                    borderColor = "#E6B800";
                    break;
                default: // info
                    bgColor = "#f1f7eb";
                    textColor = "#333333";
                    borderColor = "#99d255";
            }

            toast.style = `
                background-color: ${bgColor};
                color: ${textColor};
                border-left: 4px solid ${borderColor};
                padding: 12px 20px;
                margin-top: 15px;
                border-radius: 6px;
                box-shadow: 0 3px 8px rgba(0,0,0,0.2);
                animation: fadeInOut 4s forwards;
                font-family: 'Lexend Deca', sans-serif;
                font-weight: 500;
                display: flex;
                align-items: center;
                max-width: 350px;
            `;

            const icon = document.createElement("i");
            icon.style = "margin-right: 10px; font-size: 18px;";

            switch (type) {
                case "success":
                    icon.className = "bi bi-check-circle-fill";
                    break;
                case "error":
                    icon.className = "bi bi-x-circle-fill";
                    break;
                case "warning":
                    icon.className = "bi bi-exclamation-triangle-fill";
                    break;
                default: // info
                    icon.className = "bi bi-info-circle-fill";
            }

            toast.appendChild(icon);

            const messageSpan = document.createElement("span");
            messageSpan.innerText = message;
            toast.appendChild(messageSpan);

            document.getElementById("toastContainer").appendChild(toast);

            setTimeout(() => toast.remove(), 4000);
        }</script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>