// <auto-generated />
using System;
using DataAccessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessObjects.Migrations
{
    [DbContext(typeof(FindingHealthcareSystemContext))]
    partial class FindingHealthcareSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 3, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 1,
                            PaymentId = 1,
                            ProviderId = 1,
                            ProviderType = "Professional",
                            ServiceId = 1,
                            ServiceType = "Private",
                            Status = "Completed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 3, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 2,
                            PaymentId = 2,
                            ProviderId = 3,
                            ProviderType = "Professional",
                            ServiceId = 11,
                            ServiceType = "Private",
                            Status = "Completed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 3,
                            PaymentId = 3,
                            ProviderId = 4,
                            ProviderType = "Professional",
                            ServiceId = 14,
                            ServiceType = "Private",
                            Status = "Confirmed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 4,
                            PaymentId = 4,
                            ProviderId = 2,
                            ProviderType = "Professional",
                            ServiceId = 7,
                            ServiceType = "Private",
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 12, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 5,
                            ProviderId = 17,
                            ProviderType = "Professional",
                            ServiceId = 9,
                            ServiceType = "Private",
                            Status = "AwaitingPayment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 6,
                            PaymentId = 5,
                            ProviderId = 15,
                            ProviderType = "Professional",
                            ServiceId = 36,
                            ServiceType = "Private",
                            Status = "Cancelled",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 3, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 1,
                            ProviderId = 1,
                            ProviderType = "Facility",
                            ServiceId = 1,
                            ServiceType = "Public",
                            Status = "Expired",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 2,
                            PaymentId = 6,
                            ProviderId = 7,
                            ProviderType = "Facility",
                            ServiceId = 19,
                            ServiceType = "Public",
                            Status = "AwaitingPayment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 3,
                            ProviderId = 17,
                            ProviderType = "Facility",
                            ServiceId = 9,
                            ServiceType = "Public",
                            Status = "Rejected",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 4,
                            ProviderId = 3,
                            ProviderType = "Facility",
                            ServiceId = 39,
                            ServiceType = "Public",
                            Status = "Rescheduled",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 22, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 5,
                            PaymentId = 8,
                            ProviderId = 6,
                            ProviderType = "Facility",
                            ServiceId = 36,
                            ServiceType = "Public",
                            Status = "AwaitingPayment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 6,
                            PaymentId = 7,
                            ProviderId = 5,
                            ProviderType = "Facility",
                            ServiceId = 29,
                            ServiceType = "Public",
                            Status = "AwaitingPayment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 4, 28, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PatientId = 1,
                            PaymentId = 9,
                            ProviderId = 12,
                            ProviderType = "Facility",
                            ServiceId = 41,
                            ServiceType = "Public",
                            Status = "AwaitingPayment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "<p>Kiểm tra sức khỏe định kỳ là một trong những phương pháp quan trọng giúp phát hiện sớm các vấn đề sức khỏe tiềm ẩn. Việc kiểm tra thường xuyên không chỉ giúp bạn hiểu rõ hơn về tình trạng sức khỏe của mình mà còn giúp bác sĩ đưa ra các biện pháp điều trị kịp thời nếu phát hiện ra vấn đề.</p><p><strong>Các lợi ích chính của việc kiểm tra sức khỏe định kỳ bao gồm:</strong></p><ol><li><strong>Phát hiện sớm các bệnh lý tiềm ẩn</strong>: Việc kiểm tra sức khỏe giúp phát hiện sớm các bệnh lý như tiểu đường, huyết áp cao, hay các vấn đề tim mạch mà bạn có thể không nhận ra. Việc phát hiện sớm giúp điều trị hiệu quả hơn, giảm thiểu các biến chứng nghiêm trọng về sau.</li><li><strong>Tiết kiệm chi phí điều trị</strong>: Việc phát hiện bệnh sớm sẽ giúp bạn tiết kiệm chi phí điều trị, bởi vì bệnh sẽ dễ dàng được điều trị hơn khi phát hiện ở giai đoạn đầu. Điều này không chỉ giúp giảm chi phí cá nhân mà còn giúp hệ thống y tế giảm gánh nặng.</li><li><strong>Tăng tuổi thọ</strong>: Các kiểm tra định kỳ giúp phát hiện sớm các yếu tố nguy cơ sức khỏe và điều chỉnh kịp thời, từ đó tăng khả năng sống lâu. Ví dụ, việc kiểm soát mức huyết áp hoặc cholesterol có thể giúp giảm nguy cơ đột quỵ và các bệnh tim mạch.</li><li><strong>Cải thiện chất lượng cuộc sống</strong>: Việc kiểm tra sức khỏe sẽ giúp bạn có lối sống lành mạnh hơn, với chế độ ăn uống và tập thể dục phù hợp. Điều này sẽ giúp bạn có nhiều năng lượng hơn và cảm thấy tự tin vào sức khỏe của mình.</li><li><strong>Giảm căng thẳng và lo âu</strong>: Khi bạn biết rằng sức khỏe của mình ổn định, bạn sẽ cảm thấy an tâm và ít lo lắng hơn. Việc biết rằng bạn không mắc bệnh gì nghiêm trọng giúp bạn giảm bớt lo âu, từ đó cải thiện tâm trạng và chất lượng cuộc sống.</li></ol>",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/health-checkup.jpg",
                            IsDeleted = false,
                            Title = "5 Lợi Ích Của Việc Kiểm Tra Sức Khỏe Định Kỳ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Content = "<p>Tiêm chủng là một trong những phương pháp phòng ngừa bệnh hiệu quả nhất mà chúng ta có. Việc tiêm chủng định kỳ giúp cơ thể tạo ra miễn dịch đối với các bệnh truyền nhiễm, bảo vệ không chỉ cho bản thân mà còn cho cộng đồng. Dưới đây là những lý do tại sao tiêm chủng là quan trọng và cần thiết:</p><p><strong>1. Bảo vệ khỏi bệnh truyền nhiễm</strong>: Tiêm chủng giúp cơ thể chống lại các bệnh như sởi, thủy đậu, viêm gan B, bạch hầu và nhiều bệnh khác. Bằng cách tiêm phòng, bạn giảm nguy cơ mắc phải các bệnh này, giúp bạn bảo vệ sức khỏe của mình và những người xung quanh. Các bệnh truyền nhiễm có thể gây hậu quả nghiêm trọng, thậm chí là tử vong, nhưng có thể phòng ngừa dễ dàng nhờ tiêm chủng.</p><p><strong>2. Bảo vệ cộng đồng</strong>: Tiêm chủng không chỉ giúp bảo vệ bản thân mà còn giúp bảo vệ những người xung quanh, đặc biệt là những người không thể tiêm chủng như trẻ em, phụ nữ mang thai hoặc người có hệ miễn dịch yếu. Khi càng nhiều người trong cộng đồng tiêm phòng, khả năng lây lan của bệnh sẽ giảm thiểu, từ đó bảo vệ cả cộng đồng khỏi sự bùng phát của các dịch bệnh.</p><p><strong>3. Ngăn ngừa dịch bệnh</strong>: Khi đủ nhiều người trong cộng đồng được tiêm phòng, các dịch bệnh sẽ không có cơ hội bùng phát, giúp bảo vệ cả cộng đồng khỏi những đợt dịch nguy hiểm. Điều này đã được chứng minh qua nhiều quốc gia trên thế giới khi tiêm chủng giúp ngăn ngừa sự bùng phát của các bệnh như sởi, bại liệt, và cúm.</p><p><strong>4. Giảm chi phí chăm sóc sức khỏe</strong>: Khi tiêm chủng, bạn giảm nguy cơ mắc bệnh, từ đó giảm chi phí điều trị và chăm sóc y tế lâu dài. Các bệnh do không tiêm phòng có thể tốn kém hơn rất nhiều trong việc điều trị và chăm sóc sau này.</p><p><strong>5. Đảm bảo an toàn cho trẻ em</strong>: Việc tiêm chủng cho trẻ em giúp bảo vệ các em khỏi những bệnh tật nguy hiểm và giảm tỷ lệ tử vong do bệnh truyền nhiễm. Trẻ em có hệ miễn dịch yếu, nên việc tiêm chủng là biện pháp cần thiết để bảo vệ các em khỏi các mối đe dọa bệnh tật.</p>",
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/vaccination.jpg",
                            IsDeleted = false,
                            Title = "Tầm Quan Trọng Của Việc Tiêm Chủng Định Kỳ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Content = "<p>Một chế độ ăn uống cân bằng là nền tảng quan trọng để duy trì sức khỏe. Để có một chế độ ăn uống lành mạnh, bạn cần đảm bảo rằng cơ thể nhận được đủ các nhóm chất dinh dưỡng cần thiết. Sau đây là một số lời khuyên để duy trì chế độ ăn uống cân bằng và hợp lý:</p><p><strong>1. Ăn đủ 5 nhóm thực phẩm</strong>: Đảm bảo rằng mỗi bữa ăn của bạn bao gồm đủ các nhóm thực phẩm như tinh bột (gạo, khoai), protein (thịt, cá, đậu), chất béo lành mạnh (dầu olive, bơ), vitamin và khoáng chất (rau xanh, trái cây), và chất xơ. Việc kết hợp đa dạng các thực phẩm sẽ cung cấp đầy đủ dinh dưỡng cho cơ thể.</p><p><strong>2. Hạn chế thức ăn chế biến sẵn</strong>: Thực phẩm chế biến sẵn chứa nhiều chất bảo quản, đường và muối, có thể gây hại cho sức khỏe nếu tiêu thụ quá nhiều. Hãy tránh thức ăn nhanh, thực phẩm chiên rán, và thay vào đó là các món ăn tươi sống, chế biến tại nhà.</p><p><strong>3. Uống đủ nước</strong>: Cung cấp đủ nước cho cơ thể là một yếu tố quan trọng trong chế độ ăn uống. Nước giúp cơ thể hấp thu chất dinh dưỡng, giải độc và duy trì nhiệt độ cơ thể ổn định. Bạn nên uống ít nhất 8 cốc nước mỗi ngày và uống thêm nếu bạn tham gia các hoạt động thể thao.</p><p><strong>4. Ăn nhiều rau củ quả</strong>: Rau củ quả chứa nhiều vitamin, khoáng chất và chất xơ, giúp hỗ trợ hệ tiêu hóa, tăng cường hệ miễn dịch và giúp da khỏe mạnh. Hãy cố gắng ăn ít nhất 5 khẩu phần rau quả mỗi ngày để cung cấp các dưỡng chất thiết yếu cho cơ thể.</p><p><strong>5. Kiểm soát lượng đường và muối</strong>: Việc giảm lượng đường và muối trong chế độ ăn uống có thể giúp ngăn ngừa các bệnh lý như tiểu đường, huyết áp cao và bệnh tim. Bạn nên hạn chế các thực phẩm ngọt và thức uống có gas, thay vào đó là ăn trái cây tươi và sử dụng gia vị tự nhiên.</p>",
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/balanced-diet.jpg",
                            IsDeleted = false,
                            Title = "Chế Độ Ăn Uống Cân Bằng Cho Sức Khỏe",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Content = "<p>Hệ tiêu hóa đóng một vai trò quan trọng trong việc duy trì sức khỏe. Khi hệ tiêu hóa hoạt động tốt, cơ thể sẽ hấp thụ dinh dưỡng hiệu quả, giảm nguy cơ mắc các bệnh lý và cải thiện chất lượng cuộc sống. Dưới đây là một số thực phẩm giúp cải thiện hệ tiêu hóa:</p><p><strong>1. Sữa chua</strong>: Sữa chua chứa các vi khuẩn có lợi giúp duy trì sự cân bằng của hệ vi sinh đường ruột, từ đó giúp hệ tiêu hóa hoạt động hiệu quả hơn. Các lợi khuẩn này giúp cải thiện sự hấp thu chất dinh dưỡng và tăng cường hệ miễn dịch.</p><p><strong>2. Chuối</strong>: Chuối là một nguồn cung cấp chất xơ tuyệt vời, giúp cải thiện nhu động ruột và ngăn ngừa táo bón. Chuối cũng có thể làm dịu dạ dày và giúp giảm cảm giác đầy bụng.</p><p><strong>3. Rau xanh</strong>: Các loại rau như rau cải, rau bina và bông cải xanh chứa nhiều chất xơ và vitamin, giúp tăng cường chức năng tiêu hóa và làm sạch đường ruột. Rau xanh giúp cải thiện nhu động ruột và giảm nguy cơ mắc bệnh về đường tiêu hóa.</p><p><strong>4. Hạt chia</strong>: Hạt chia giàu chất xơ, giúp cải thiện nhu động ruột và giảm táo bón. Ngoài ra, hạt chia còn cung cấp các axit béo omega-3 có lợi cho sức khỏe.</p><p><strong>5. Gừng</strong>: Gừng có tính kháng viêm và có thể giúp làm dịu dạ dày, hỗ trợ tiêu hóa và giảm đầy bụng. Uống trà gừng hoặc thêm gừng tươi vào các món ăn có thể giúp cải thiện hệ tiêu hóa.</p>",
                            CreatedAt = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/digestive-health.jpg",
                            IsDeleted = false,
                            Title = "Thực Phẩm Giúp Cải Thiện Hệ Tiêu Hóa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Content = "<p>Bệnh tim mạch là một trong những nguyên nhân hàng đầu gây tử vong trên toàn cầu. Tuy nhiên, bệnh tim mạch có thể được phòng ngừa thông qua các biện pháp thay đổi lối sống lành mạnh. Dưới đây là những phương pháp phòng ngừa hiệu quả bệnh tim mạch:</p><p><strong>1. Duy trì một chế độ ăn uống lành mạnh</strong>: Chế độ ăn uống giàu trái cây, rau củ, ngũ cốc nguyên hạt, và giảm thiểu các thực phẩm giàu chất béo bão hòa và cholesterol sẽ giúp bảo vệ tim mạch. Hãy bổ sung các thực phẩm giàu omega-3 như cá hồi và các loại hạt giúp làm giảm nguy cơ bệnh tim.</p><p><strong>2. Tập thể dục thường xuyên</strong>: Các nghiên cứu đã chứng minh rằng việc tập thể dục thường xuyên, ít nhất 30 phút mỗi ngày, giúp cải thiện sức khỏe tim mạch. Việc này giúp tăng cường lưu thông máu, kiểm soát huyết áp và cholesterol.</p><p><strong>3. Kiểm soát cân nặng</strong>: Thừa cân làm tăng nguy cơ mắc bệnh tim mạch. Việc duy trì cân nặng hợp lý thông qua chế độ ăn uống và luyện tập sẽ giảm thiểu gánh nặng cho tim, giúp tim hoạt động hiệu quả hơn.</p><p><strong>4. Hạn chế căng thẳng</strong>: Căng thẳng kéo dài có thể làm tăng huyết áp và làm tổn thương mạch máu. Hãy áp dụng các phương pháp giảm stress như thiền, yoga, hoặc đi bộ để giảm mức độ căng thẳng trong cuộc sống hàng ngày.</p><p><strong>5. Kiểm tra sức khỏe định kỳ</strong>: Việc kiểm tra sức khỏe định kỳ, bao gồm kiểm tra huyết áp và mức cholesterol, sẽ giúp bạn phát hiện sớm các yếu tố nguy cơ và có biện pháp can thiệp kịp thời để bảo vệ sức khỏe tim mạch.</p>",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/heart-health.jpg",
                            IsDeleted = false,
                            Title = "Cách Phòng Ngừa Bệnh Tim Mạch",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Content = "<p>Ung thư phổi là một trong những loại ung thư nguy hiểm và có tỷ lệ tử vong cao. Việc phát hiện bệnh sớm sẽ giúp điều trị hiệu quả và cải thiện cơ hội sống sót. Dưới đây là một số dấu hiệu cảnh báo ung thư phổi mà bạn không nên bỏ qua:</p><p><strong>1. Ho kéo dài</strong>: Ho kéo dài, đặc biệt là ho có đờm hoặc ho ra máu, có thể là dấu hiệu của ung thư phổi. Nếu bạn có ho liên tục trong nhiều tuần, hãy đi kiểm tra để xác định nguyên nhân.</p><p><strong>2. Khó thở</strong>: Khó thở hoặc cảm giác hụt hơi khi làm những việc bình thường có thể là triệu chứng của bệnh ung thư phổi. Sự tắc nghẽn trong phổi do khối u có thể làm giảm khả năng hô hấp của bạn.</p><p><strong>3. Đau ngực</strong>: Đau hoặc cảm giác tức ngực, đặc biệt là khi ho hoặc thở sâu, có thể là dấu hiệu của ung thư phổi. Cơn đau có thể lan ra vai hoặc lưng, đặc biệt khi khối u chèn ép lên các cơ quan lân cận.</p><p><strong>4. Giảm cân không rõ lý do</strong>: Giảm cân đột ngột mà không thay đổi chế độ ăn uống hoặc lối sống có thể là một dấu hiệu của ung thư phổi. Đây là triệu chứng chung của nhiều loại ung thư, trong đó có ung thư phổi.</p><p><strong>5. Mệt mỏi kéo dài</strong>: Cảm giác mệt mỏi và yếu ớt kéo dài có thể là dấu hiệu của ung thư phổi. Khi các tế bào ung thư phát triển, cơ thể sẽ trở nên mệt mỏi hơn, và năng lượng của bạn sẽ giảm sút.</p><p>Việc kiểm tra y tế kịp thời sẽ giúp phát hiện ung thư phổi ở giai đoạn sớm, từ đó tăng cơ hội điều trị và cải thiện khả năng sống sót của bệnh nhân.</p>",
                            CreatedAt = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            ImgUrl = "/images/articles/lung-cancer.jpg",
                            IsDeleted = false,
                            Title = "Những Dấu Hiệu Cảnh Báo Ung Thư Phổi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.ArticleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/health-checkup-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/health-checkup-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/vaccination-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/vaccination-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ArticleId = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/balanced-diet-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ArticleId = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/balanced-diet-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ArticleId = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/digestive-health-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ArticleId = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/digestive-health-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ArticleId = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/heart-health-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ArticleId = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/heart-health-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ArticleId = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/lung-cancer-1.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            ArticleId = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImgUrl = "/images/articles/lung-cancer-2.jpg",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về các chủ đề y tế, chăm sóc sức khỏe, và bệnh lý.",
                            IsDeleted = false,
                            Name = "Y tế",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về dinh dưỡng, chế độ ăn uống và cách duy trì sức khỏe qua thực phẩm.",
                            IsDeleted = false,
                            Name = "Dinh dưỡng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về các bệnh lý phổ biến, nguyên nhân và cách phòng ngừa.",
                            IsDeleted = false,
                            Name = "Bệnh lý",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về cách chăm sóc sức khỏe bản thân và gia đình.",
                            IsDeleted = false,
                            Name = "Chăm sóc sức khỏe",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về các loại phẫu thuật, quy trình và phục hồi sau phẫu thuật.",
                            IsDeleted = false,
                            Name = "Phẫu thuật",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Các bài viết về sức khỏe tinh thần, tâm lý học và cách duy trì tinh thần khỏe mạnh.",
                            IsDeleted = false,
                            Name = "Sức khỏe tâm lý",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý nội khoa như tim mạch, tiêu hóa, thần kinh.",
                            IsDeleted = false,
                            Name = "Khoa Nội",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên phẫu thuật và điều trị các bệnh lý ngoại khoa.",
                            IsDeleted = false,
                            Name = "Khoa Ngoại",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên chăm sóc sức khỏe phụ nữ, mang thai, sinh nở và các vấn đề liên quan.",
                            IsDeleted = false,
                            Name = "Khoa Sản",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý liên quan đến trẻ em và trẻ sơ sinh.",
                            IsDeleted = false,
                            Name = "Khoa Nhi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên thực hiện các xét nghiệm chẩn đoán bệnh lý.",
                            IsDeleted = false,
                            Name = "Khoa Xét nghiệm",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên thực hiện các kỹ thuật hình ảnh như X-quang, MRI, CT scan.",
                            IsDeleted = false,
                            Name = "Khoa Chẩn đoán hình ảnh",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các vấn đề về răng miệng và các bệnh lý liên quan.",
                            IsDeleted = false,
                            Name = "Khoa Răng Hàm Mặt",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên khám và điều trị các bệnh lý về mắt.",
                            IsDeleted = false,
                            Name = "Khoa Mắt",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên khám và điều trị các bệnh lý về tai, mũi, họng.",
                            IsDeleted = false,
                            Name = "Khoa Tai Mũi Họng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý về da và thẩm mỹ.",
                            IsDeleted = false,
                            Name = "Khoa Da Liễu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên cấp cứu và điều trị các bệnh nhân trong tình trạng khẩn cấp.",
                            IsDeleted = false,
                            Name = "Khoa Cấp cứu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên theo dõi và điều trị bệnh nhân trong tình trạng nguy kịch.",
                            IsDeleted = false,
                            Name = "Khoa Hồi sức tích cực",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các vấn đề liên quan đến tâm lý, stress và trầm cảm.",
                            IsDeleted = false,
                            Name = "Khoa Tâm lý",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên phục hồi chức năng cho bệnh nhân sau tai nạn hoặc phẫu thuật.",
                            IsDeleted = false,
                            Name = "Khoa Phục hồi chức năng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý liên quan đến hệ tiết niệu và thận.",
                            IsDeleted = false,
                            Name = "Khoa Tiết niệu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý về tim và mạch máu.",
                            IsDeleted = false,
                            Name = "Khoa Tim mạch",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý liên quan đến hệ hô hấp như phổi và khí quản.",
                            IsDeleted = false,
                            Name = "Khoa Hô hấp",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý về nội tiết như tiểu đường, tuyến giáp.",
                            IsDeleted = false,
                            Name = "Khoa Nội tiết",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên điều trị các bệnh lý ung thư và các bệnh lý ác tính.",
                            IsDeleted = false,
                            Name = "Khoa Ung bướu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên tư vấn và điều trị các vấn đề liên quan đến dinh dưỡng.",
                            IsDeleted = false,
                            Name = "Khoa Dinh dưỡng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Expertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Expertises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học Y khoa hệ chính quy (6 năm).",
                            IsDeleted = false,
                            Name = "Bác sĩ đa khoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học Y học cổ truyền (6 năm).",
                            IsDeleted = false,
                            Name = "Bác sĩ y học cổ truyền",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học chuyên khoa Răng - Hàm - Mặt (6 năm).",
                            IsDeleted = false,
                            Name = "Bác sĩ Răng - Hàm - Mặt",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học chuyên ngành Y học dự phòng (6 năm).",
                            IsDeleted = false,
                            Name = "Bác sĩ Y học dự phòng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học ngành Dược (5 năm).",
                            IsDeleted = false,
                            Name = "Dược sĩ đại học",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tốt nghiệp đại học ngành Điều dưỡng (4 năm).",
                            IsDeleted = false,
                            Name = "Cử nhân Điều dưỡng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đào tạo chuyên sâu 3 năm sau khi tốt nghiệp bác sĩ đa khoa.",
                            IsDeleted = false,
                            Name = "Bác sĩ nội trú",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đào tạo sau đại học chuyên sâu trong lĩnh vực y khoa (2 năm).",
                            IsDeleted = false,
                            Name = "Bác sĩ chuyên khoa I",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cấp cao hơn chuyên khoa I, đào tạo tiếp 2-3 năm.",
                            IsDeleted = false,
                            Name = "Bác sĩ chuyên khoa II",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Học vị thạc sĩ ngành y khoa (2 năm).",
                            IsDeleted = false,
                            Name = "Thạc sĩ Y khoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Học vị tiến sĩ y học, chuyên sâu nghiên cứu (3-5 năm).",
                            IsDeleted = false,
                            Name = "Tiến sĩ Y khoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Học hàm Phó Giáo sư, có nhiều nghiên cứu và đóng góp khoa học.",
                            IsDeleted = false,
                            Name = "Phó Giáo sư - Tiến sĩ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Học hàm Giáo sư, chuyên gia đầu ngành y tế.",
                            IsDeleted = false,
                            Name = "Giáo sư - Tiến sĩ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("OperationDay")
                        .HasColumnType("date");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "78 Đường Giải Phóng",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Một trong những bệnh viện đa khoa lớn nhất Việt Nam, cung cấp dịch vụ y tế chất lượng cao với đội ngũ y bác sĩ hàng đầu.",
                            District = "Quận Đống Đa",
                            ImgUrl = "/images/facilities/bach-mai.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Bạch Mai",
                            OperationDay = new DateOnly(2020, 5, 15),
                            Province = "Thành phố Hà Nội",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Phương Mai"
                        },
                        new
                        {
                            Id = 2,
                            Address = "201 Nguyễn Chí Thanh",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện hạng đặc biệt tại miền Nam, với trang thiết bị hiện đại và đội ngũ y bác sĩ giỏi chuyên môn.",
                            District = "Quận 5",
                            ImgUrl = "/images/facilities/cho-ray.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Chợ Rẫy",
                            OperationDay = new DateOnly(2019, 7, 20),
                            Province = "Thành phố Hồ Chí Minh",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường 12"
                        },
                        new
                        {
                            Id = 3,
                            Address = "458 Minh Khai",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện tư nhân đẳng cấp quốc tế với cơ sở vật chất và trang thiết bị hiện đại hàng đầu Việt Nam.",
                            District = "Quận Hai Bà Trưng",
                            ImgUrl = "/images/facilities/vinmec.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa Quốc tế Vinmec Times City",
                            OperationDay = new DateOnly(2022, 3, 10),
                            Province = "Thành phố Hà Nội",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Vĩnh Tuy"
                        },
                        new
                        {
                            Id = 4,
                            Address = "16 Lê Lợi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa hạng đặc biệt tại miền Trung, cung cấp dịch vụ y tế chất lượng cao cho khu vực.",
                            District = "Thành phố Huế",
                            ImgUrl = "/images/facilities/hue-central.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Trung ương Huế",
                            OperationDay = new DateOnly(2021, 8, 5),
                            Province = "Thừa Thiên Huế",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Phước Vĩnh"
                        },
                        new
                        {
                            Id = 5,
                            Address = "315 Nguyễn Văn Cừ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa hạng đặc biệt tại miền Tây Nam Bộ, cung cấp dịch vụ y tế cho khu vực Đồng bằng sông Cửu Long.",
                            District = "Quận Ninh Kiều",
                            ImgUrl = "/images/facilities/cantho-central.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa Trung ương Cần Thơ",
                            OperationDay = new DateOnly(2020, 10, 17),
                            Province = "Thành phố Cần Thơ",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Tân An"
                        },
                        new
                        {
                            Id = 6,
                            Address = "30 Cầu Bươu",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện chuyên khoa ung bướu hàng đầu, cung cấp dịch vụ chẩn đoán và điều trị ung thư.",
                            District = "Huyện Thanh Trì",
                            ImgUrl = "/images/facilities/k-hospital.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện K Tân Triều",
                            OperationDay = new DateOnly(2022, 1, 20),
                            Province = "Thành phố Hà Nội",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Xã Tân Triều"
                        },
                        new
                        {
                            Id = 7,
                            Address = "85 Bà Triệu",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện chuyên khoa mắt hàng đầu, cung cấp dịch vụ chẩn đoán và điều trị các bệnh lý về mắt.",
                            District = "Quận Đống Đa",
                            ImgUrl = "/images/facilities/eye-hospital.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Mắt Trung ương",
                            OperationDay = new DateOnly(2021, 5, 5),
                            Province = "Thành phố Hà Nội",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Trung Liệt"
                        },
                        new
                        {
                            Id = 8,
                            Address = "6 Nguyễn Lương Bằng",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện quốc tế với đội ngũ bác sĩ trong nước và quốc tế, cung cấp dịch vụ y tế chất lượng cao.",
                            District = "Quận 7",
                            ImgUrl = "/images/facilities/fv-hospital.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện FV",
                            OperationDay = new DateOnly(2023, 2, 15),
                            Province = "Thành phố Hồ Chí Minh",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Tân Phú"
                        },
                        new
                        {
                            Id = 9,
                            Address = "291 Nguyễn Văn Linh",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện tư nhân hiện đại tại miền Trung, cung cấp dịch vụ y tế chất lượng cao.",
                            District = "Quận Hải Châu",
                            ImgUrl = "/images/facilities/hoan-my.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa Hoàn Mỹ Đà Nẵng",
                            OperationDay = new DateOnly(2022, 6, 10),
                            Province = "Thành phố Đà Nẵng",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Thạch Thang"
                        },
                        new
                        {
                            Id = 10,
                            Address = "84 Đường Vành Đai 4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trung tâm y tế cung cấp dịch vụ khám chữa bệnh cho người dân địa phương với chi phí hợp lý.",
                            District = "Huyện Bình Chánh",
                            ImgUrl = "/images/facilities/binh-chanh.jpg",
                            IsDeleted = false,
                            Name = "Trung tâm Y tế huyện Bình Chánh",
                            OperationDay = new DateOnly(2021, 9, 8),
                            Province = "Thành phố Hồ Chí Minh",
                            Status = "Active",
                            TypeId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Thị trấn Tân Túc"
                        },
                        new
                        {
                            Id = 11,
                            Address = "30 Đường Đỗ Đức Dục",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trung tâm y tế cung cấp dịch vụ chăm sóc sức khỏe ban đầu và phòng ngừa dịch bệnh cho cộng đồng.",
                            District = "Quận Nam Từ Liêm",
                            ImgUrl = "/images/facilities/nam-tu-liem.jpg",
                            IsDeleted = false,
                            Name = "Trung tâm Y tế quận Nam Từ Liêm",
                            OperationDay = new DateOnly(2022, 4, 12),
                            Province = "Thành phố Hà Nội",
                            Status = "Active",
                            TypeId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Mỹ Đình"
                        },
                        new
                        {
                            Id = 12,
                            Address = "638 Đường Trần Hưng Đạo",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa hạng I cung cấp dịch vụ y tế cho người dân tỉnh Lào Cai và các tỉnh lân cận.",
                            District = "Thành phố Lào Cai",
                            ImgUrl = "/images/facilities/laocai.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa tỉnh Lào Cai",
                            OperationDay = new DateOnly(2021, 11, 20),
                            Province = "Tỉnh Lào Cai",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Nam Cường"
                        },
                        new
                        {
                            Id = 13,
                            Address = "225 Đường Nguyễn Lương Bằng",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa hạng I cung cấp dịch vụ y tế chất lượng cho người dân trong tỉnh.",
                            District = "Thành phố Hải Dương",
                            ImgUrl = "/images/facilities/hai-duong.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa tỉnh Hải Dương",
                            OperationDay = new DateOnly(2020, 12, 15),
                            Province = "Tỉnh Hải Dương",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Trần Phú"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Đường Phan Châu Trinh",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa tuyến tỉnh, cung cấp dịch vụ khám chữa bệnh cho người dân trong tỉnh Quảng Nam.",
                            District = "Thành phố Tam Kỳ",
                            ImgUrl = "/images/facilities/quang-nam.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa tỉnh Quảng Nam",
                            OperationDay = new DateOnly(2022, 2, 8),
                            Province = "Tỉnh Quảng Nam",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường An Xuân"
                        },
                        new
                        {
                            Id = 15,
                            Address = "52 Trần Phú",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện tư nhân cung cấp dịch vụ y tế chất lượng cao cho người dân và du khách tại Nha Trang.",
                            District = "Thành phố Nha Trang",
                            ImgUrl = "/images/facilities/nhatrang.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa Quốc tế Nha Trang",
                            OperationDay = new DateOnly(2023, 1, 10),
                            Province = "Tỉnh Khánh Hòa",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Vĩnh Hải"
                        },
                        new
                        {
                            Id = 16,
                            Address = "144 Đường Nguyễn Thị Minh Khai",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa tuyến tỉnh, cung cấp dịch vụ y tế cho người dân tỉnh Đồng Tháp.",
                            District = "Thành phố Cao Lãnh",
                            ImgUrl = "/images/facilities/dong-thap.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa tỉnh Đồng Tháp",
                            OperationDay = new DateOnly(2021, 7, 8),
                            Province = "Tỉnh Đồng Tháp",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường 1"
                        },
                        new
                        {
                            Id = 17,
                            Address = "70 Đường 30/4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện tư nhân chất lượng cao chuyên về sản phụ khoa và nhi khoa tại khu vực Đồng bằng sông Cửu Long.",
                            District = "Quận Ninh Kiều",
                            ImgUrl = "/images/facilities/phuong-chau.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa Phương Châu",
                            OperationDay = new DateOnly(2022, 9, 15),
                            Province = "Thành phố Cần Thơ",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường An Bình"
                        },
                        new
                        {
                            Id = 18,
                            Address = "17B Phù Đổng Thiên Vương",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện đa khoa tuyến tỉnh, cung cấp dịch vụ y tế cho người dân Lâm Đồng và các tỉnh lân cận.",
                            District = "Thành phố Đà Lạt",
                            ImgUrl = "/images/facilities/lam-dong.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Đa khoa tỉnh Lâm Đồng",
                            OperationDay = new DateOnly(2021, 3, 25),
                            Province = "Tỉnh Lâm Đồng",
                            Status = "Active",
                            TypeId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường 8"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Tổ 3",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trung tâm y tế cung cấp dịch vụ chăm sóc sức khỏe cơ bản cho đồng bào dân tộc vùng cao.",
                            District = "Huyện Mèo Vạc",
                            ImgUrl = "/images/facilities/meovac.jpg",
                            IsDeleted = false,
                            Name = "Trung tâm Y tế huyện Mèo Vạc",
                            OperationDay = new DateOnly(2022, 8, 5),
                            Province = "Tỉnh Hà Giang",
                            Status = "Inactive",
                            TypeId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Thị trấn Mèo Vạc"
                        },
                        new
                        {
                            Id = 20,
                            Address = "24 Đường Số 4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện tư nhân mới thành lập, trang bị hiện đại và cung cấp dịch vụ y tế chất lượng cao.",
                            District = "Quận Bình Tân",
                            ImgUrl = "/images/facilities/city-hospital.jpg",
                            IsDeleted = false,
                            Name = "Bệnh viện Quốc tế City",
                            OperationDay = new DateOnly(2023, 3, 1),
                            Province = "Thành phố Hồ Chí Minh",
                            Status = "Active",
                            TypeId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Phường Bình Trị Đông"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.FacilityDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacilityId");

                    b.ToTable("FacilityDepartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 11,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 12,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 16,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 19,
                            FacilityId = 1,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 11,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 15,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 18,
                            FacilityId = 2,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            FacilityId = 3,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 4,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 4,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 4,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 4,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 11,
                            FacilityId = 4,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 5,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 5,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 5,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 14,
                            FacilityId = 5,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 6,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            FacilityId = 6,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 19,
                            FacilityId = 6,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 8,
                            FacilityId = 7,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 8,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 8,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 8,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            FacilityId = 8,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 9,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 9,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 9,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 8,
                            FacilityId = 9,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 10,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 10,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 11,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 11,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 12,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 12,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 12,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 12,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 13,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 13,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 9,
                            FacilityId = 13,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 14,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 14,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 13,
                            FacilityId = 14,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 15,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 15,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            FacilityId = 15,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 16,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 16,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            FacilityId = 17,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 17,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 17,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 18,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 18,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 18,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            FacilityId = 18,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 19,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            FacilityId = 19,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 16,
                            FacilityId = 20,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện do nhà nước sở hữu và quản lý, cung cấp dịch vụ y tế cho người dân với chi phí thấp hơn.",
                            IsDeleted = false,
                            Name = "Bệnh viện công",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bệnh viện thuộc sở hữu của các cá nhân hoặc tổ chức tư nhân, cung cấp dịch vụ y tế với chất lượng cao và chi phí có thể cao hơn.",
                            IsDeleted = false,
                            Name = "Bệnh viện tư",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cơ sở cung cấp dịch vụ y tế cơ bản và phòng ngừa cho cộng đồng.",
                            IsDeleted = false,
                            Name = "Trung tâm y tế",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Tôi có tiền sử bệnh tim mạch, đã từng phẫu thuật van tim năm 2020",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Tôi bị tiểu đường type 2 và huyết áp cao, đang điều trị thuốc ổn định",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Tôi có tiền sử viêm gan B, đang theo dõi định kỳ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Tôi bị hen suyễn từ nhỏ, có dị ứng với bụi và phấn hoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Bệnh nhân bị thoái hóa cột sống, đang điều trị vật lý trị liệu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Note = "Tôi có tiền sử sỏi thận, đã phẫu thuật lấy sỏi năm 2022",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 11
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Completed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP13579246",
                            Price = 250000m,
                            TransactionId = "VNP13579246",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 18, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Completed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP24681357",
                            Price = 60000m,
                            TransactionId = "VNP24681357",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 20, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Completed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP98765432",
                            Price = 325000m,
                            TransactionId = "VNP98765432",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 22, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Completed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP12345678",
                            Price = 200000m,
                            TransactionId = "VNP12345678",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 25, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Completed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP87654321",
                            Price = 350000m,
                            TransactionId = "VNP87654321",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 29, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Pending",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP24680135",
                            Price = 100000m,
                            TransactionId = "VNP24680135",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 30, 15, 20, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Pending",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP13572468",
                            Price = 125000m,
                            TransactionId = "VNP13572468",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 28, 14, 10, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Failed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP11223344",
                            Price = 250000m,
                            TransactionId = "VNP11223344",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PaymentDate = new DateTime(2025, 3, 29, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "VnPay",
                            PaymentStatus = "Failed",
                            PaymentUrl = "https://vnpay.vn/transaction/VNP99887766",
                            Price = 100000m,
                            TransactionId = "VNP99887766",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.PrivateService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProfessionalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalId");

                    b.ToTable("PrivateServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát và tư vấn các bệnh lý nội khoa như tim mạch, tiêu hóa, hô hấp.",
                            IsDeleted = false,
                            Name = "Khám và tư vấn bệnh lý nội khoa",
                            Price = 500000m,
                            ProfessionalId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chẩn đoán và điều trị các bệnh lý về đường tiêu hóa như viêm dạ dày, trào ngược dạ dày.",
                            IsDeleted = false,
                            Name = "Điều trị bệnh lý tiêu hóa",
                            Price = 600000m,
                            ProfessionalId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, tư vấn và quản lý các bệnh mạn tính như tăng huyết áp, tiểu đường.",
                            IsDeleted = false,
                            Name = "Khám và quản lý bệnh mạn tính",
                            Price = 450000m,
                            ProfessionalId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn chế độ dinh dưỡng phù hợp cho người mắc các bệnh lý nội khoa.",
                            IsDeleted = false,
                            Name = "Tư vấn dinh dưỡng cho bệnh nhân nội khoa",
                            Price = 350000m,
                            ProfessionalId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và chẩn đoán chuyên sâu các bệnh lý tiêu hóa phức tạp.",
                            IsDeleted = false,
                            Name = "Khám bệnh tiêu hóa chuyên sâu",
                            Price = 700000m,
                            ProfessionalId = 16,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh lý bằng phương pháp y học cổ truyền.",
                            IsDeleted = false,
                            Name = "Khám và điều trị bằng y học cổ truyền",
                            Price = 450000m,
                            ProfessionalId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sử dụng phương pháp châm cứu để điều trị các chứng đau nhức cơ xương khớp.",
                            IsDeleted = false,
                            Name = "Châm cứu điều trị đau nhức",
                            Price = 400000m,
                            ProfessionalId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Xoa bóp, bấm huyệt kết hợp với các bài thuốc cổ truyền để điều trị đau mỏi.",
                            IsDeleted = false,
                            Name = "Xoa bóp bấm huyệt",
                            Price = 350000m,
                            ProfessionalId = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sử dụng phương pháp cấy chỉ kết hợp với châm cứu để điều trị đau thần kinh tọa.",
                            IsDeleted = false,
                            Name = "Cấy chỉ điều trị đau thần kinh tọa",
                            Price = 600000m,
                            ProfessionalId = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát răng miệng, tư vấn chăm sóc và phòng ngừa bệnh lý răng miệng.",
                            IsDeleted = false,
                            Name = "Khám và tư vấn răng miệng",
                            Price = 300000m,
                            ProfessionalId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Điều trị tủy răng cho các trường hợp viêm tủy, hoại tử tủy.",
                            IsDeleted = false,
                            Name = "Điều trị tủy răng",
                            Price = 1200000m,
                            ProfessionalId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trám răng sâu bằng các vật liệu thẩm mỹ, màu sắc tự nhiên.",
                            IsDeleted = false,
                            Name = "Trám răng thẩm mỹ",
                            Price = 500000m,
                            ProfessionalId = 14,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhổ răng khôn với phương pháp ít đau, an toàn, phục hồi nhanh.",
                            IsDeleted = false,
                            Name = "Nhổ răng khôn",
                            Price = 1500000m,
                            ProfessionalId = 14,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và tư vấn các bệnh lý tim mạch như tăng huyết áp, rối loạn nhịp tim.",
                            IsDeleted = false,
                            Name = "Khám và tư vấn bệnh lý tim mạch",
                            Price = 650000m,
                            ProfessionalId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Siêu âm tim để đánh giá cấu trúc và chức năng của tim.",
                            IsDeleted = false,
                            Name = "Siêu âm tim",
                            Price = 600000m,
                            ProfessionalId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đo điện tâm đồ để đánh giá nhịp tim và phát hiện các bất thường về điện tim.",
                            IsDeleted = false,
                            Name = "Điện tâm đồ",
                            Price = 250000m,
                            ProfessionalId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và tư vấn các trường hợp cần can thiệp phẫu thuật.",
                            IsDeleted = false,
                            Name = "Khám và tư vấn phẫu thuật",
                            Price = 600000m,
                            ProfessionalId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phẫu thuật cắt bỏ các u lành tính trên da và dưới da.",
                            IsDeleted = false,
                            Name = "Phẫu thuật cắt u lành tính",
                            Price = 3500000m,
                            ProfessionalId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phẫu thuật nội soi điều trị các bệnh lý tiêu hóa như viêm ruột thừa, sỏi mật.",
                            IsDeleted = false,
                            Name = "Phẫu thuật nội soi tiêu hóa",
                            Price = 5000000m,
                            ProfessionalId = 16,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám phụ khoa tổng quát định kỳ, phát hiện sớm các bệnh lý phụ khoa.",
                            IsDeleted = false,
                            Name = "Khám phụ khoa tổng quát",
                            Price = 500000m,
                            ProfessionalId = 6,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Siêu âm đánh giá tình trạng tử cung, buồng trứng và các cơ quan sinh sản nữ.",
                            IsDeleted = false,
                            Name = "Siêu âm phụ khoa",
                            Price = 400000m,
                            ProfessionalId = 6,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám thai định kỳ, theo dõi sự phát triển của thai nhi và sức khỏe của mẹ.",
                            IsDeleted = false,
                            Name = "Khám thai định kỳ",
                            Price = 550000m,
                            ProfessionalId = 6,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và tư vấn các bệnh lý thần kinh như đau đầu, động kinh, đột quỵ.",
                            IsDeleted = false,
                            Name = "Khám và tư vấn bệnh lý thần kinh",
                            Price = 700000m,
                            ProfessionalId = 7,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đo điện não đồ để đánh giá hoạt động điện của não và phát hiện bất thường.",
                            IsDeleted = false,
                            Name = "Điện não đồ",
                            Price = 650000m,
                            ProfessionalId = 7,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đánh giá tình trạng bệnh nhân và lập kế hoạch phục hồi chức năng cá nhân hóa.",
                            IsDeleted = false,
                            Name = "Đánh giá và lập kế hoạch phục hồi chức năng",
                            Price = 500000m,
                            ProfessionalId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vật lý trị liệu chuyên sâu cho các bệnh lý về cột sống như thoát vị đĩa đệm, đau thắt lưng.",
                            IsDeleted = false,
                            Name = "Vật lý trị liệu cột sống",
                            Price = 400000m,
                            ProfessionalId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, tư vấn và quản lý bệnh tiểu đường, bao gồm kế hoạch điều trị và chế độ dinh dưỡng.",
                            IsDeleted = false,
                            Name = "Khám và điều trị bệnh tiểu đường",
                            Price = 600000m,
                            ProfessionalId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và điều trị các bệnh lý của tuyến giáp như cường giáp, suy giáp.",
                            IsDeleted = false,
                            Name = "Khám và điều trị rối loạn tuyến giáp",
                            Price = 650000m,
                            ProfessionalId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và điều trị các bệnh lý hô hấp như viêm phổi, hen suyễn, COPD.",
                            IsDeleted = false,
                            Name = "Khám và điều trị bệnh hô hấp",
                            Price = 550000m,
                            ProfessionalId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đo và đánh giá chức năng hô hấp để chẩn đoán các bệnh lý phổi.",
                            IsDeleted = false,
                            Name = "Đo chức năng hô hấp",
                            Price = 450000m,
                            ProfessionalId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đánh giá các yếu tố nguy cơ và tư vấn phòng ngừa ung thư cá nhân hóa.",
                            IsDeleted = false,
                            Name = "Tư vấn và đánh giá nguy cơ ung thư",
                            Price = 1000000m,
                            ProfessionalId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám định kỳ và theo dõi cho bệnh nhân sau điều trị ung thư.",
                            IsDeleted = false,
                            Name = "Khám và theo dõi sau điều trị ung thư",
                            Price = 1200000m,
                            ProfessionalId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám sức khỏe tổng quát định kỳ cho trẻ em, theo dõi sự phát triển và tầm soát bệnh lý.",
                            IsDeleted = false,
                            Name = "Khám sức khỏe tổng quát cho trẻ",
                            Price = 500000m,
                            ProfessionalId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn chế độ dinh dưỡng và lịch tiêm chủng phù hợp theo từng độ tuổi của trẻ.",
                            IsDeleted = false,
                            Name = "Tư vấn dinh dưỡng và tiêm chủng cho trẻ",
                            Price = 400000m,
                            ProfessionalId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và điều trị các bệnh lý về da như mụn trứng cá, viêm da, chàm.",
                            IsDeleted = false,
                            Name = "Khám và điều trị bệnh da liễu",
                            Price = 550000m,
                            ProfessionalId = 15,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Điều trị chuyên sâu mụn trứng cá và cải thiện tình trạng sẹo sau mụn.",
                            IsDeleted = false,
                            Name = "Điều trị mụn và sẹo",
                            Price = 700000m,
                            ProfessionalId = 15,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát tai, mũi, họng và chẩn đoán các bệnh lý liên quan.",
                            IsDeleted = false,
                            Name = "Khám tai mũi họng tổng quát",
                            Price = 500000m,
                            ProfessionalId = 18,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nội soi để chẩn đoán chính xác các bệnh lý tai, mũi, họng khó phát hiện bằng khám thường.",
                            IsDeleted = false,
                            Name = "Nội soi tai mũi họng",
                            Price = 600000m,
                            ProfessionalId = 18,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát mắt, kiểm tra thị lực và chẩn đoán các bệnh lý về mắt.",
                            IsDeleted = false,
                            Name = "Khám mắt tổng quát",
                            Price = 450000m,
                            ProfessionalId = 19,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đo khúc xạ chính xác và kê đơn kính phù hợp cho các trường hợp cận, viễn, loạn thị.",
                            IsDeleted = false,
                            Name = "Đo khúc xạ và kê đơn kính",
                            Price = 350000m,
                            ProfessionalId = 19,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám sức khỏe tổng quát và tầm soát các bệnh lý thường gặp.",
                            IsDeleted = false,
                            Name = "Khám sức khỏe tổng quát",
                            Price = 400000m,
                            ProfessionalId = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn các biện pháp phòng ngừa bệnh tật và duy trì lối sống lành mạnh.",
                            IsDeleted = false,
                            Name = "Tư vấn phòng ngừa bệnh tật",
                            Price = 300000m,
                            ProfessionalId = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Professional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExpertiseId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpertiseId1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingHours")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExpertiseId");

                    b.HasIndex("ExpertiseId1");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Professionals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Số 15, Phố Hàng Bông",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Chuyên khoa I Nội khoa",
                            District = "Quận Hoàn Kiếm",
                            Experience = "Có 12 năm kinh nghiệm trong lĩnh vực khám chữa bệnh nội khoa",
                            ExpertiseId = 8,
                            IsDeleted = false,
                            Province = "Thành phố Hà Nội",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4,
                            Ward = "Phường Hàng Bạc",
                            WorkingHours = "8:00 - 17:00"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Số 25, Đường Nguyễn Huệ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Y học cổ truyền",
                            District = "Quận 1",
                            Experience = "Có 8 năm kinh nghiệm trong điều trị các bệnh lý bằng y học cổ truyền",
                            ExpertiseId = 2,
                            IsDeleted = false,
                            Province = "Thành phố Hồ Chí Minh",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5,
                            Ward = "Phường Bến Nghé",
                            WorkingHours = "9:00 - 18:00"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Số 42, Đường Trần Phú",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Răng Hàm Mặt",
                            District = "Quận Hải Châu",
                            Experience = "Có 15 năm kinh nghiệm trong lĩnh vực nha khoa và phẫu thuật hàm mặt",
                            ExpertiseId = 3,
                            IsDeleted = false,
                            Province = "Thành phố Đà Nẵng",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8,
                            Ward = "Phường Thạch Thang",
                            WorkingHours = "8:30 - 17:30"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Số 28, Đường Hòa Bình",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Chuyên khoa II Tim mạch",
                            District = "Quận Ninh Kiều",
                            Experience = "Có 9 năm kinh nghiệm trong lĩnh vực tim mạch và nội khoa",
                            ExpertiseId = 9,
                            IsDeleted = false,
                            Province = "Thành phố Cần Thơ",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9,
                            Ward = "Phường Tân An",
                            WorkingHours = "7:00 - 16:00"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Số 55, Đường Ngô Gia Tự",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Tiến sĩ Y khoa chuyên ngành Ngoại khoa",
                            District = "Thành phố Bắc Ninh",
                            Experience = "Có 18 năm kinh nghiệm trong lĩnh vực ngoại khoa và phẫu thuật tổng quát",
                            ExpertiseId = 11,
                            IsDeleted = false,
                            Province = "Tỉnh Bắc Ninh",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 12,
                            Ward = "Phường Đại Phúc",
                            WorkingHours = "7:30 - 16:30"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Số 105, Đường Xuân Thủy",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Thạc sĩ Y khoa chuyên ngành Sản phụ khoa",
                            District = "Quận Cầu Giấy",
                            Experience = "Có 11 năm kinh nghiệm trong lĩnh vực sản khoa và phụ khoa",
                            ExpertiseId = 10,
                            IsDeleted = false,
                            Province = "Thành phố Hà Nội",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 13,
                            Ward = "Phường Dịch Vọng",
                            WorkingHours = "8:00 - 17:00"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Số 215, Đường Hồng Bàng",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Phó Giáo sư - Tiến sĩ Y khoa",
                            District = "Quận 5",
                            Experience = "Có 25 năm kinh nghiệm trong lĩnh vực thần kinh và nghiên cứu khoa học",
                            ExpertiseId = 12,
                            IsDeleted = false,
                            Province = "Thành phố Hồ Chí Minh",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 14,
                            Ward = "Phường 5",
                            WorkingHours = "9:00 - 16:00"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Số 38, Đường Trần Phú",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Y khoa",
                            District = "Thành phố Nha Trang",
                            Experience = "Có 5 năm kinh nghiệm trong lĩnh vực khám chữa bệnh tổng quát",
                            ExpertiseId = 1,
                            IsDeleted = false,
                            Province = "Tỉnh Khánh Hòa",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 15,
                            Ward = "Phường Lộc Thọ",
                            WorkingHours = "7:30 - 17:00"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Số 77, Đường Lê Hồng Phong",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Cử nhân Điều dưỡng",
                            District = "Thành phố Thủ Dầu Một",
                            Experience = "Có 7 năm kinh nghiệm trong chăm sóc và điều dưỡng bệnh nhân",
                            ExpertiseId = 6,
                            IsDeleted = false,
                            Province = "Tỉnh Bình Dương",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 16,
                            Ward = "Phường Phú Cường",
                            WorkingHours = "7:00 - 19:00"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Số 12, Đường Lạch Tray",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Dược sĩ đại học",
                            District = "Quận Hồng Bàng",
                            Experience = "Có 10 năm kinh nghiệm trong lĩnh vực dược phẩm và tư vấn thuốc",
                            ExpertiseId = 5,
                            IsDeleted = false,
                            Province = "Thành phố Hải Phòng",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 17,
                            Ward = "Phường Hoàng Văn Thụ",
                            WorkingHours = "8:00 - 18:00"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Số 65, Đường Nguyễn Huệ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Y học dự phòng",
                            District = "Thành phố Huế",
                            Experience = "Có 14 năm kinh nghiệm trong lĩnh vực y học dự phòng và kiểm soát dịch bệnh",
                            ExpertiseId = 4,
                            IsDeleted = false,
                            Province = "Tỉnh Thừa Thiên Huế",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 18,
                            Ward = "Phường Phú Nhuận",
                            WorkingHours = "7:30 - 16:30"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Số 43, Đường Liễu Giai",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Giáo sư - Tiến sĩ Y khoa",
                            District = "Quận Ba Đình",
                            Experience = "Có 32 năm kinh nghiệm trong lĩnh vực nghiên cứu và điều trị ung thư",
                            ExpertiseId = 13,
                            IsDeleted = false,
                            Province = "Thành phố Hà Nội",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 19,
                            Ward = "Phường Kim Mã",
                            WorkingHours = "9:00 - 15:00"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Số 153, Đường Nguyễn Thị Thập",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Bác sĩ nội trú chuyên ngành Nhi",
                            District = "Quận 7",
                            Experience = "Có 6 năm kinh nghiệm trong lĩnh vực nhi khoa và hồi sức cấp cứu nhi",
                            ExpertiseId = 7,
                            IsDeleted = false,
                            Province = "Thành phố Hồ Chí Minh",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 20,
                            Ward = "Phường Tân Phú",
                            WorkingHours = "8:00 - 20:00"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Số 88, Đường Lê Lợi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Răng Hàm Mặt",
                            District = "Thành phố Vinh",
                            Experience = "Có 9 năm kinh nghiệm trong lĩnh vực chỉnh nha và thẩm mỹ răng",
                            ExpertiseId = 3,
                            IsDeleted = false,
                            Province = "Tỉnh Nghệ An",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 21,
                            Ward = "Phường Hà Huy Tập",
                            WorkingHours = "8:30 - 17:30"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Số 27, Đường Lê Hồng Phong",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Chuyên khoa I Da liễu",
                            District = "Thành phố Vũng Tàu",
                            Experience = "Có 13 năm kinh nghiệm trong lĩnh vực da liễu và thẩm mỹ da",
                            ExpertiseId = 8,
                            IsDeleted = false,
                            Province = "Tỉnh Bà Rịa - Vũng Tàu",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 22,
                            Ward = "Phường Thắng Tam",
                            WorkingHours = "8:00 - 17:00"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Số 56, Đường Phan Đình Phùng",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Chuyên khoa II Ngoại Tiêu hóa",
                            District = "Thành phố Đà Lạt",
                            Experience = "Có 16 năm kinh nghiệm trong lĩnh vực ngoại tiêu hóa và phẫu thuật nội soi",
                            ExpertiseId = 9,
                            IsDeleted = false,
                            Province = "Tỉnh Lâm Đồng",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 23,
                            Ward = "Phường 1",
                            WorkingHours = "8:00 - 16:00"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Số 19, Đường Hạ Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Y học cổ truyền",
                            District = "Thành phố Hạ Long",
                            Experience = "Có 11 năm kinh nghiệm trong lĩnh vực y học cổ truyền và châm cứu",
                            ExpertiseId = 2,
                            IsDeleted = false,
                            Province = "Tỉnh Quảng Ninh",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 24,
                            Ward = "Phường Bãi Cháy",
                            WorkingHours = "8:00 - 17:30"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Số 33, Đường Hùng Vương",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Tiến sĩ Y khoa chuyên ngành Tai Mũi Họng",
                            District = "Thành phố Việt Trì",
                            Experience = "Có 17 năm kinh nghiệm trong lĩnh vực tai mũi họng và phẫu thuật đầu cổ",
                            ExpertiseId = 11,
                            IsDeleted = false,
                            Province = "Tỉnh Phú Thọ",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 25,
                            Ward = "Phường Nông Trang",
                            WorkingHours = "7:30 - 17:00"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Số 48, Đường Nguyễn Tất Thành",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Thạc sĩ Y khoa chuyên ngành Mắt",
                            District = "Thành phố Cà Mau",
                            Experience = "Có 8 năm kinh nghiệm trong lĩnh vực nhãn khoa và phẫu thuật mắt",
                            ExpertiseId = 10,
                            IsDeleted = false,
                            Province = "Tỉnh Cà Mau",
                            RequestStatus = "Approved",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 26,
                            Ward = "Phường 5",
                            WorkingHours = "7:30 - 16:30"
                        },
                        new
                        {
                            Id = 20,
                            Address = "Số 10, Đường Tô Hiệu",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Đại học Y khoa",
                            District = "Thành phố Sơn La",
                            Experience = "Có 4 năm kinh nghiệm trong lĩnh vực y học gia đình và chăm sóc sức khỏe cộng đồng",
                            ExpertiseId = 1,
                            IsDeleted = false,
                            Province = "Tỉnh Sơn La",
                            RequestStatus = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 27,
                            Ward = "Phường Quyết Thắng",
                            WorkingHours = "7:00 - 17:00"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.ProfessionalSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ProfessionalId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("ProfessionalSpecialties");

                    b.HasData(
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 6,
                            SpecialtyId = 6,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 7,
                            SpecialtyId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 8,
                            SpecialtyId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 9,
                            SpecialtyId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 10,
                            SpecialtyId = 14,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 11,
                            SpecialtyId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 12,
                            SpecialtyId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 13,
                            SpecialtyId = 7,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 14,
                            SpecialtyId = 15,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 15,
                            SpecialtyId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 16,
                            SpecialtyId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 17,
                            SpecialtyId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 18,
                            SpecialtyId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 19,
                            SpecialtyId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 20,
                            SpecialtyId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 12,
                            SpecialtyId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ProfessionalId = 16,
                            SpecialtyId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.PublicService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PublicServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và tư vấn các bệnh lý nội khoa tổng quát, bao gồm đánh giá sức khỏe toàn diện.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám nội khoa tổng quát",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và điều trị các bệnh lý về đường tiêu hóa như viêm dạ dày, trào ngược dạ dày.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám và điều trị bệnh tiêu hóa",
                            Price = 450000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và tư vấn các bệnh lý nội khoa, bao gồm đánh giá chức năng các cơ quan nội tạng.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Khám nội khoa tổng quát",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và tư vấn điều trị cho bệnh nhân tiểu đường, bao gồm kiểm tra đường huyết.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Khám bệnh tiểu đường",
                            Price = 500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và tư vấn các vấn đề ngoại khoa, bao gồm các bệnh lý cần can thiệp phẫu thuật.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám ngoại khoa tổng quát",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phẫu thuật cắt ruột thừa viêm bằng phương pháp nội soi hoặc mổ mở.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Phẫu thuật cắt ruột thừa",
                            Price = 5000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám thai định kỳ, theo dõi sự phát triển của thai nhi và sức khỏe của mẹ.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám thai định kỳ",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dịch vụ sinh thường trọn gói, bao gồm theo dõi chuyển dạ và chăm sóc sau sinh.",
                            FacilityId = 3,
                            IsDeleted = false,
                            Name = "Sinh thường",
                            Price = 6000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dịch vụ sinh mổ trọn gói theo yêu cầu, bao gồm phẫu thuật, chăm sóc sau sinh và hỗ trợ nuôi con bằng sữa mẹ.",
                            FacilityId = 17,
                            IsDeleted = false,
                            Name = "Sinh mổ theo yêu cầu",
                            Price = 25000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám sức khỏe tổng quát cho trẻ em, đánh giá sự phát triển và tầm soát bệnh lý.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám nhi tổng quát",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gói tiêm chủng cơ bản cho trẻ theo lịch của Bộ Y tế, bao gồm vắc xin và theo dõi sau tiêm.",
                            FacilityId = 4,
                            IsDeleted = false,
                            Name = "Tiêm chủng cho trẻ",
                            Price = 1500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Xét nghiệm máu cơ bản bao gồm công thức máu, đường huyết và chức năng gan thận.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Xét nghiệm máu cơ bản",
                            Price = 200000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Xét nghiệm vi sinh để phát hiện các tác nhân gây bệnh như vi khuẩn, virus.",
                            FacilityId = 5,
                            IsDeleted = false,
                            Name = "Xét nghiệm vi sinh",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chụp X-quang các bộ phận cơ thể để chẩn đoán bệnh lý xương khớp và phổi.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Chụp X-quang",
                            Price = 180000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chụp cộng hưởng từ để chẩn đoán chi tiết các bệnh lý về não, cột sống và các cơ quan nội tạng.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Chụp cộng hưởng từ (MRI)",
                            Price = 2500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chụp cắt lớp vi tính để chẩn đoán chi tiết các bệnh lý khác nhau trong cơ thể.",
                            FacilityId = 6,
                            IsDeleted = false,
                            Name = "Chụp cắt lớp vi tính (CT)",
                            Price = 1500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát răng miệng, tư vấn chăm sóc và phòng ngừa bệnh lý răng miệng.",
                            FacilityId = 3,
                            IsDeleted = false,
                            Name = "Khám răng tổng quát",
                            Price = 150000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cạo vôi răng để loại bỏ cao răng và mảng bám, giúp răng chắc khỏe và ngăn ngừa bệnh nướu.",
                            FacilityId = 20,
                            IsDeleted = false,
                            Name = "Cạo vôi răng",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát mắt, kiểm tra thị lực và chẩn đoán các bệnh lý về mắt.",
                            FacilityId = 7,
                            IsDeleted = false,
                            Name = "Khám mắt tổng quát",
                            Price = 200000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phẫu thuật Lasik điều trị cận thị, viễn thị và loạn thị bằng công nghệ laser hiện đại.",
                            FacilityId = 7,
                            IsDeleted = false,
                            Name = "Phẫu thuật Lasik",
                            Price = 25000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám tổng quát tai, mũi, họng và chẩn đoán các bệnh lý liên quan.",
                            FacilityId = 13,
                            IsDeleted = false,
                            Name = "Khám tai mũi họng",
                            Price = 250000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nội soi tai mũi họng để chẩn đoán chính xác các bệnh lý tai, mũi, họng.",
                            FacilityId = 13,
                            IsDeleted = false,
                            Name = "Nội soi tai mũi họng",
                            Price = 450000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh lý về da như mụn trứng cá, viêm da, chàm.",
                            FacilityId = 3,
                            IsDeleted = false,
                            Name = "Khám da liễu",
                            Price = 300000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Điều trị chuyên sâu mụn trứng cá và cải thiện tình trạng sẹo sau mụn.",
                            FacilityId = 15,
                            IsDeleted = false,
                            Name = "Điều trị mụn chuyên sâu",
                            Price = 800000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dịch vụ cấp cứu cho các trường hợp chấn thương, tai nạn.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Cấp cứu chấn thương",
                            Price = 500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dịch vụ cấp cứu cho các trường hợp đột quỵ, nhồi máu cơ tim và các cấp cứu nội khoa khác.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Cấp cứu nội khoa",
                            Price = 450000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chăm sóc đặc biệt cho bệnh nhân trong tình trạng nguy kịch (tính theo ngày).",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Hồi sức tích cực",
                            Price = 3500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn và hỗ trợ tâm lý cho người gặp vấn đề về stress, lo âu, trầm cảm.",
                            FacilityId = 14,
                            IsDeleted = false,
                            Name = "Tư vấn tâm lý",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vật lý trị liệu cho các bệnh nhân đau cột sống, chấn thương và sau phẫu thuật.",
                            FacilityId = 5,
                            IsDeleted = false,
                            Name = "Vật lý trị liệu",
                            Price = 250000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh lý về hệ tiết niệu như sỏi thận, viêm đường tiết niệu.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Khám tiết niệu",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và tư vấn các bệnh lý tim mạch như tăng huyết áp, rối loạn nhịp tim.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám tim mạch",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Siêu âm tim để đánh giá cấu trúc và chức năng của tim.",
                            FacilityId = 20,
                            IsDeleted = false,
                            Name = "Siêu âm tim",
                            Price = 500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh lý hô hấp như viêm phổi, hen suyễn, COPD.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Khám hô hấp",
                            Price = 350000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đo và đánh giá chức năng hô hấp để chẩn đoán các bệnh lý phổi.",
                            FacilityId = 18,
                            IsDeleted = false,
                            Name = "Đo chức năng hô hấp",
                            Price = 300000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh lý nội tiết như tiểu đường, rối loạn tuyến giáp.",
                            FacilityId = 2,
                            IsDeleted = false,
                            Name = "Khám nội tiết",
                            Price = 400000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám, chẩn đoán và tư vấn điều trị các bệnh lý ung thư.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Khám ung bướu",
                            Price = 500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Điều trị ung thư bằng phương pháp xạ trị với máy móc hiện đại (tính cho một liệu trình).",
                            FacilityId = 6,
                            IsDeleted = false,
                            Name = "Xạ trị ung thư",
                            Price = 12000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn chế độ dinh dưỡng cá nhân hóa cho các bệnh lý khác nhau.",
                            FacilityId = 1,
                            IsDeleted = false,
                            Name = "Tư vấn dinh dưỡng",
                            Price = 300000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gói khám sức khỏe tổng quát cơ bản bao gồm khám nội khoa, xét nghiệm máu, X-quang ngực.",
                            FacilityId = 3,
                            IsDeleted = false,
                            Name = "Gói khám sức khỏe tổng quát cơ bản",
                            Price = 1500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gói khám sức khỏe toàn diện bao gồm khám chuyên khoa, xét nghiệm, siêu âm và chẩn đoán hình ảnh.",
                            FacilityId = 8,
                            IsDeleted = false,
                            Name = "Gói khám sức khỏe toàn diện",
                            Price = 5000000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị bằng các phương pháp y học cổ truyền như châm cứu, bấm huyệt.",
                            FacilityId = 12,
                            IsDeleted = false,
                            Name = "Khám và điều trị y học cổ truyền",
                            Price = 200000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám sức khỏe toàn diện theo yêu cầu cho người đi xuất khẩu lao động.",
                            FacilityId = 16,
                            IsDeleted = false,
                            Name = "Khám sức khỏe đi xuất khẩu lao động",
                            Price = 1800000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám và điều trị các bệnh thông thường như cảm cúm, viêm họng, tiêu chảy.",
                            FacilityId = 10,
                            IsDeleted = false,
                            Name = "Khám và điều trị bệnh thông thường",
                            Price = 120000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tiêm các loại vắc xin theo yêu cầu (giá chưa bao gồm vắc xin).",
                            FacilityId = 11,
                            IsDeleted = false,
                            Name = "Tiêm vắc xin theo yêu cầu",
                            Price = 500000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khám sức khỏe cơ bản và tư vấn phòng bệnh cho người dân địa phương.",
                            FacilityId = 19,
                            IsDeleted = false,
                            Name = "Khám sức khỏe cơ bản",
                            Price = 80000m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành điều trị các bệnh lý nội bộ của cơ thể như bệnh tim mạch, tiêu hóa, hô hấp, thận.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Nội",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành liên quan đến phẫu thuật và điều trị các bệnh lý cần can thiệp phẫu thuật.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Ngoại",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành chuyên sâu về bệnh lý tim mạch, bao gồm các bệnh liên quan đến tim và mạch máu.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Tim mạch",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành chẩn đoán và điều trị các bệnh liên quan đến hệ thần kinh như đột quỵ, động kinh.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Thần kinh",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành chăm sóc và điều trị các bệnh lý về da như mụn, eczema, bệnh vảy nến.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Da liễu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành điều trị các bệnh lý liên quan đến hệ sinh sản và chăm sóc sức khỏe phụ nữ.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Sản phụ khoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành chăm sóc sức khỏe và điều trị bệnh lý cho trẻ em.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Nhi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành điều trị và quản lý các bệnh lý ung thư.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Ung bướu",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành điều trị và chăm sóc các bệnh lý về mắt, bao gồm đục thủy tinh thể, tật khúc xạ.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Mắt",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành liên quan đến các bệnh lý tai, mũi, họng và các cấu trúc liên quan.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Tai Mũi Họng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành tập trung vào phục hồi sức khỏe cho bệnh nhân sau phẫu thuật, tai nạn, hoặc các bệnh lý nghiêm trọng.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Phục hồi chức năng",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành sử dụng các phương pháp y học cổ truyền như châm cứu, bấm huyệt để điều trị bệnh.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Y học cổ truyền",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành nghiên cứu và điều trị các bệnh lý về hô hấp như viêm phổi, hen suyễn.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Hô hấp",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành điều trị các bệnh lý liên quan đến nội tiết tố như tiểu đường, rối loạn tuyến giáp.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Nội tiết",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuyên ngành chăm sóc sức khỏe răng miệng, bao gồm điều trị sâu răng, chỉnh hình răng miệng.",
                            IsDeleted = false,
                            Name = "Chuyên khoa Nha khoa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateOnly(1990, 1, 1),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            Fullname = "Nguyễn Văn Admin",
                            Gender = "Nam",
                            ImgUrl = "/images/users/admin_avatar.jpg",
                            IsDeleted = false,
                            Password = "ad123456",
                            PhoneNumber = "0901234567",
                            Role = "Admin",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateOnly(1995, 5, 20),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient1@example.com",
                            Fullname = "Trần Thị Bích",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/patient_female_1.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0902345678",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateOnly(1988, 10, 12),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient2@example.com",
                            Fullname = "Lê Văn Cường",
                            Gender = "Nam",
                            ImgUrl = "/images/users/patient_male_1.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0903456789",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateOnly(1985, 3, 15),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "professional1@example.com",
                            Fullname = "Phạm Minh Đức",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_1.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0904567890",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateOnly(1987, 7, 30),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "professional2@example.com",
                            Fullname = "Vũ Thị Hương",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_1.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0905678901",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateOnly(1992, 8, 25),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient3@example.com",
                            Fullname = "Hoàng Thị Mai",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/patient_female_2.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0906789012",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateOnly(1998, 4, 17),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient4@example.com",
                            Fullname = "Đỗ Quang Nam",
                            Gender = "Nam",
                            ImgUrl = "/images/users/patient_male_2.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0907890123",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateOnly(1980, 11, 5),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "professional3@example.com",
                            Fullname = "Ngô Thanh Tùng",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_2.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0908901234",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateOnly(1983, 6, 10),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "professional4@example.com",
                            Fullname = "Lý Thị Hoa",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_2.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0909012345",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Birthday = new DateOnly(1990, 9, 15),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient5@example.com",
                            Fullname = "Dương Văn Khải",
                            Gender = "Nam",
                            ImgUrl = "/images/users/patient_male_3.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0910123456",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Birthday = new DateOnly(1994, 2, 28),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patient6@example.com",
                            Fullname = "Trịnh Thu Phương",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/patient_female_3.jpg",
                            IsDeleted = false,
                            Password = "pa123456",
                            PhoneNumber = "0911234567",
                            Role = "Patient",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Birthday = new DateOnly(1978, 4, 20),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "professional5@example.com",
                            Fullname = "Bùi Quốc Anh",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_3.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0912345678",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Birthday = new DateOnly(1982, 5, 15),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lananh@example.com",
                            Fullname = "Nguyễn Thị Lan Anh",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_3.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0913456789",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Birthday = new DateOnly(1970, 8, 22),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranminh@example.com",
                            Fullname = "Trần Văn Minh",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_4.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0912345678",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Birthday = new DateOnly(1990, 3, 10),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thanhhuong@example.com",
                            Fullname = "Phan Thị Thanh Hương",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_4.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0923456789",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Birthday = new DateOnly(1988, 11, 5),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mylinh@example.com",
                            Fullname = "Ngô Thị Mỹ Linh",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_5.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0934567890",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Birthday = new DateOnly(1985, 4, 18),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quoctuan@example.com",
                            Fullname = "Đặng Quốc Tuấn",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_5.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0945678901",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Birthday = new DateOnly(1981, 6, 25),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kimngan@example.com",
                            Fullname = "Lê Thị Kim Ngân",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_6.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0956789012",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Birthday = new DateOnly(1965, 10, 15),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ducthinh@example.com",
                            Fullname = "Hoàng Đức Thịnh",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_6.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0967890123",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Birthday = new DateOnly(1989, 2, 8),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhquan@example.com",
                            Fullname = "Vũ Minh Quân",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_7.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0978901234",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Birthday = new DateOnly(1986, 7, 12),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhhai@example.com",
                            Fullname = "Trịnh Minh Hải",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_8.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0989012345",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Birthday = new DateOnly(1982, 9, 28),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thuytrang@example.com",
                            Fullname = "Phạm Thị Thùy Trang",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_7.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0990123456",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Birthday = new DateOnly(1979, 12, 5),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vanhung@example.com",
                            Fullname = "Bùi Văn Hưng",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_9.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0901234567",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Birthday = new DateOnly(1984, 5, 15),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bichngoc@example.com",
                            Fullname = "Nguyễn Thị Bích Ngọc",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_8.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0912345678",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Birthday = new DateOnly(1978, 8, 20),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quangvinh@example.com",
                            Fullname = "Trương Quang Vinh",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_10.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0923456789",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Birthday = new DateOnly(1987, 3, 12),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duongha@example.com",
                            Fullname = "Dương Thị Hà",
                            Gender = "Nữ",
                            ImgUrl = "/images/users/doctor_female_9.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0934567890",
                            Role = "Professional",
                            Status = "Active",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            Birthday = new DateOnly(1991, 10, 8),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vanthang@example.com",
                            Fullname = "Mai Văn Thắng",
                            Gender = "Nam",
                            ImgUrl = "/images/users/doctor_male_11.jpg",
                            IsDeleted = false,
                            Password = "pro123456",
                            PhoneNumber = "0945678901",
                            Role = "Professional",
                            Status = "Inactive",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Appointment", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessObjects.Entities.Payment", "Payment")
                        .WithMany("Appointments")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BusinessObjects.Entities.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Appointment_Facility");

                    b.HasOne("BusinessObjects.Entities.Professional", "Professional")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Appointment_Professional");

                    b.HasOne("BusinessObjects.Entities.PrivateService", "PrivateService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Appointment_PrivateService");

                    b.HasOne("BusinessObjects.Entities.PublicService", "PublicService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Appointment_PublicService");

                    b.Navigation("Facility");

                    b.Navigation("Patient");

                    b.Navigation("Payment");

                    b.Navigation("PrivateService");

                    b.Navigation("Professional");

                    b.Navigation("PublicService");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Article", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BusinessObjects.Entities.User", "CreatedBy")
                        .WithMany("Articles")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("BusinessObjects.Entities.ArticleImage", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Article", "Article")
                        .WithMany("ArticleImages")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Attachment", b =>
                {
                    b.HasOne("BusinessObjects.Entities.MedicalRecord", "MedicalRecord")
                        .WithMany("Attachments")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Facility", b =>
                {
                    b.HasOne("BusinessObjects.Entities.FacilityType", "Type")
                        .WithMany("Facilities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BusinessObjects.Entities.FacilityDepartment", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Department", "Department")
                        .WithMany("FacilityDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessObjects.Entities.Facility", "Facility")
                        .WithMany("FacilityDepartments")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("BusinessObjects.Entities.MedicalRecord", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Appointment", "Appointment")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Patient", b =>
                {
                    b.HasOne("BusinessObjects.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("BusinessObjects.Entities.Patient", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Entities.PrivateService", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Professional", "Professional")
                        .WithMany("PrivateServices")
                        .HasForeignKey("ProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Professional");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Professional", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Expertise", "Expertise")
                        .WithMany()
                        .HasForeignKey("ExpertiseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BusinessObjects.Entities.Expertise", null)
                        .WithMany("Professionals")
                        .HasForeignKey("ExpertiseId1");

                    b.HasOne("BusinessObjects.Entities.User", "User")
                        .WithOne("Professional")
                        .HasForeignKey("BusinessObjects.Entities.Professional", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Expertise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Entities.ProfessionalSpecialty", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Professional", "Professional")
                        .WithMany("ProfessionalSpecialties")
                        .HasForeignKey("ProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessObjects.Entities.Specialty", "Specialty")
                        .WithMany("ProfessionalSpecialties")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Professional");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("BusinessObjects.Entities.PublicService", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Facility", "Facility")
                        .WithMany("PublicServices")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Review", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Patient", "Patient")
                        .WithMany("Reviews")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessObjects.Entities.Facility", null)
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Review_Facility");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Appointment", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Article", b =>
                {
                    b.Navigation("ArticleImages");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Department", b =>
                {
                    b.Navigation("FacilityDepartments");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Expertise", b =>
                {
                    b.Navigation("Professionals");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Facility", b =>
                {
                    b.Navigation("FacilityDepartments");

                    b.Navigation("PublicServices");
                });

            modelBuilder.Entity("BusinessObjects.Entities.FacilityType", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("BusinessObjects.Entities.MedicalRecord", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Payment", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Professional", b =>
                {
                    b.Navigation("PrivateServices");

                    b.Navigation("ProfessionalSpecialties");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Specialty", b =>
                {
                    b.Navigation("ProfessionalSpecialties");
                });

            modelBuilder.Entity("BusinessObjects.Entities.User", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Patient");

                    b.Navigation("Professional");
                });
#pragma warning restore 612, 618
        }
    }
}
